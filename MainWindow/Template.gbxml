<guidebook name="作业指导书" id="CSC-211-EB" test-type-file="TestType.xml" macro-file="RelayTest" device-id="" dev-by="ATS" version="1.0" comm-cmd-config="MmsCommCmdConfig.xml" pp-template="" script-library="GbScriptLibrary.xml" ppengine-progid="PpMmsEngine.PoEngine" dvm-file="RelayDeviceModel.xml" stand-file="" device-model-file="" test-control-mode="0" expand-config-file="RelayExpandData.xml" iecfg-file="" read-only="0" save-rpt-to-db="0"><dataset name="测试仪定义" id="TestAppDef" data-type="dataset" write-mode="0" index="0"><data name="厂家" id="Factory" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="型号" id="Model" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="名称" id="Name" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="编号" id="SN" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="出厂日期" id="DateManufac" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/></dataset><dataset name="全局数据" id="GlobalDatas" data-type="" write-mode="0" index="0"><data name="TestBeginTime" id="TestBeginTime" data-type="" value="" unit="" min="" max="" format="%Y - %m - %d " index="0" time="0" change="0" step=""/><data name="TestEndTime" id="TestEndTime" data-type="" value="" unit="" min="" max="" format="%Y - %m - %d " index="0" time="0" change="0" step=""/><data name="TestType" id="TestType" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="Tester" id="Tester" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="GuideBookFile" id="GuideBookFile" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="DeviceFile" id="DeviceFile" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="Protocol" id="Protocol" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="ProjectName" id="ProjectName" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="TaskName" id="TaskName" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="User" id="User" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="UserCop" id="UserCop" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="ReportSN" id="ReportSN" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="TestError" id="TestError" data-type="" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="装置信息编码" id="DeviceCode" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="型号" id="Model" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="ID" id="ID" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="ip" id="ip" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="ip_2" id="ip_2" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="ip_3" id="ip_3" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="COM_1" id="COM_1" data-type="long" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="COM_2" id="COM_2" data-type="long" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="COM_3" id="COM_3" data-type="long" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="类型" id="类型" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="厂商" id="厂商" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="型号" id="型号" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="硬件版本号" id="硬件版本号" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""><value name="" id="硬件版本" data-type="string" value=""/></data><data name="生产日期" id="生产日期" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="类型" id="Type" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="厂商" id="Factory" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="硬件版本号" id="HdVer" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""><value name="硬件版本" id="HdVer" data-type="string" value=""/></data><data name="生产日期" id="PDate" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="Sign_File" id="Sign_File" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="DevIndex" id="DevIndex" data-type="string" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="udc-power" id="udc-power" data-type="long" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/><data name="Ac-Current" id="Ac-Current" data-type="long" value="" unit="" min="" max="" format="" index="0" time="0" change="0" step=""/></dataset><job-guide name="作业指导" id="JobGuide"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/></job-guide><expr-script-mngr name="" id=""/><scriptmngr name="" id=""><script name="模入电压电流精度测试" id="模入电压电流精度测试" is-ref="0"><![CDATA[local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差
local vg_MRIErrorAbs = GetTestPara("g_MRIErrorAbs"); --模入电流绝对误差
local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_MRUErrorAbs = GetTestPara("g_MRUErrorAbs"); --模入电压绝对误差
local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值
local nRsltJdg = 0;

nRsltJdg = nRsltJdg + CalAinError("Ia$cVal$mag$f", v_Ia, vg_MRIErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("Ib$cVal$mag$f", v_Ib, vg_MRIErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("Ic$cVal$mag$f", v_Ic, vg_MRIErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("3I0$cVal$mag$f", v_Ia, vg_MRIErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("Ua$cVal$mag$f", v_Ua, vg_MRUErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("Ub$cVal$mag$f", v_Ub, vg_MRUErrorAbs, vg_MRUErrorRel);
nRsltJdg = nRsltJdg + CalAinError("Uc$cVal$mag$f", v_Uc, vg_MRUErrorAbs, vg_MRUErrorRel);
nRsltJdg = nRsltJdg + CalAinError("Ux$cVal$mag$f", v_Ua, vg_MRUErrorAbs, vg_MRUErrorRel);
nRsltJdg = nRsltJdg + CalAinError("IN$cVal$mag$f", v_Ia, vg_MRIErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("IaR$cVal$mag$f", v_Ia, vg_MRIErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("IbR$cVal$mag$f", v_Ib, vg_MRIErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("IcR$cVal$mag$f", v_Ic, vg_MRIErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("3I0R$cVal$mag$f", v_Ia, vg_MRIErrorAbs, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("UaR$cVal$mag$f", v_Ua, vg_MRUErrorAbs, vg_MRUErrorRel);
nRsltJdg = nRsltJdg + CalAinError("UbR$cVal$mag$f", v_Ub, vg_MRUErrorAbs, vg_MRUErrorRel);
nRsltJdg = nRsltJdg + CalAinError("UcR$cVal$mag$f", v_Uc, vg_MRUErrorAbs, vg_MRUErrorRel);
if(nRsltJdg==16) then
    SetRsltJdg("", 1);
else
    SetRsltJdg("", 0);
end;]]></script><script name="直流电压电流精度测试" id="直流电压电流精度测试" is-ref="0"><![CDATA[local vg_DCIErrorRel = GetTestPara("g_DCIErrorRel"); --直流电流相对误差 
local vg_DCIErrorAbs = GetTestPara("g_DCIErrorAbs"); --直流电流绝对误差 
local vg_DCUErrorRel = GetTestPara("g_DCUErrorRel"); --直流电压相对误差 
local vg_DCUErrorAbs = GetTestPara("g_DCUErrorAbs"); --直流电压绝对误差 
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值 
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值 
local nRsltJdg = 0; 

if(nRsltJdg==0) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; 
]]></script><script name="模拟量极性检查" id="模拟量极性检查" is-ref="0"><![CDATA[local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差 
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差 
local v_UcPh = GetPara("..\\", "_UcPh"); --Uc相位 
local v_UbPh = GetPara("..\\", "_UbPh"); --Ub相位 
local v_UaPh = GetPara("..\\", "_UaPh"); --Ua相位 
local v_IcPh = GetPara("..\\", "_IcPh"); --Ic相位 
local v_IbPh = GetPara("..\\", "_IbPh"); --Ib相位 
local v_IaPh = GetPara("..\\", "_IaPh"); --Ia相位 
local nRsltJdg = 0; 

nRsltJdg = nRsltJdg + CalAinError("Ia$cVal$ang$f", v_IaPh, vg_MRIAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("Ib$cVal$ang$f", v_IbPh, vg_MRIAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("Ic$cVal$ang$f", v_IcPh, vg_MRIAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("Ua$cVal$ang$f", v_UaPh, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("Ub$cVal$ang$f", v_UbPh, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("Uc$cVal$ang$f", v_UcPh, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("Ux$cVal$ang$f", v_UaPh, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("3I0$cVal$ang$f", v_IaPh, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("Is0$cVal$ang$f", v_IaPh, vg_MRIAngErrorAbs, -1); 
if(nRsltJdg==9) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; 
]]></script><script name="测量电压电流精度测试" id="测量电压电流精度测试" is-ref="0"><![CDATA[local vg_CLIErrorRel = GetTestPara("g_I005InErrorRel"); --测量电流相对误差 
local vg_CLIErrorAbs = GetTestPara("g_CLIErrorAbs"); --测量电流绝对误差 
local vg_CLUErrorRel = GetTestPara("g_CLUErrorRel"); --测量电压相对误差 
local vg_CLUErrorAbs = GetTestPara("g_U1VErrorAbs"); --测量电压绝对误差 
local vg_FreqErrorAbs = GetTestPara("g_FreqErrorAbs"); --频率绝对误差 
local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值 
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值 
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值 
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值 
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值 
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值 
local v_UaFre = GetPara("..\\", "_UaFre"); --Ua频率 
local nRsltJdg = 0; 

nRsltJdg = nRsltJdg + CalAinError("测量Ua$cVal$mag$f", v_Ua, vg_CLUErrorAbs, vg_CLUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("测量Ub$cVal$mag$f", v_Ub, vg_CLUErrorAbs, vg_CLUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("测量Uc$cVal$mag$f", v_Uc, vg_CLUErrorAbs, vg_CLUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("测量Ia$cVal$mag$f", v_Ia, vg_CLIErrorAbs, vg_CLIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("测量Ib$cVal$mag$f", v_Ib, vg_CLIErrorAbs, vg_CLIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("测量Ic$cVal$mag$f", v_Ic, vg_CLIErrorAbs, vg_CLIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("测量Ux$cVal$mag$f", v_Ua, vg_CLUErrorAbs, vg_CLUErrorRel);
if(nRsltJdg==7) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; 
]]></script><script name="测量有功功率精度测试" id="测量有功功率精度测试" is-ref="0"><![CDATA[local v_UaFre = GetPara("..\\", "_UaFre"); --Ua频率
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值
local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local vg_FreqErrorAbs = GetTestPara("g_FreqErrorAbs"); --频率绝对误差
local vg_CLIErrorRel = GetTestPara("g_I005InErrorRel"); --测量电流相对误差
local vg_CLIErrorAbs = GetTestPara("g_CLIErrorAbs"); --测量电流绝对误差
local vg_CLUErrorRel = GetTestPara("g_CLUErrorRel"); --测量电压相对误差
local vg_CLUErrorAbs = GetTestPara("g_U1VErrorAbs"); --测量电压绝对误差
local vg_GLErrorRel = GetTestPara("g_GLErrorRel"); --功率相对误差 
local vPa = GetReportValue("..\\", "Pa"); --A相有功功率 
local vPb = GetReportValue("..\\", "Pb"); --B相有功功率 
local vPc = GetReportValue("..\\", "Pc"); --C相有功功率 
local vPsum = GetReportValue("..\\", "Psum"); --总有功功率 

local nRsltJdg = 0; 
nRsltJdg = nRsltJdg + CalAinError("测量Ua$cVal$mag$f", v_Ua, vg_CLUErrorAbs, vg_CLUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("测量Ub$cVal$mag$f", v_Ub, vg_CLUErrorAbs, vg_CLUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("测量Uc$cVal$mag$f", v_Uc, vg_CLUErrorAbs, vg_CLUErrorRel);
nRsltJdg = nRsltJdg + CalAinError("测量Ux$cVal$mag$f", v_Ua, vg_CLUErrorAbs, vg_CLUErrorRel);
nRsltJdg = nRsltJdg + CalAinError("测量Ia$cVal$mag$f", v_Ia, vg_CLIErrorAbs, vg_CLIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("测量Ib$cVal$mag$f", v_Ib, vg_CLIErrorAbs, vg_CLIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("测量Ic$cVal$mag$f", v_Ic, vg_CLIErrorAbs, vg_CLIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("P$cVal$mag$f", vPsum, -1, vg_GLErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("F$cVal$mag$f", v_UaFre, vg_FreqErrorAbs,-1);
if(nRsltJdg==9) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end;]]></script><script name="测量无功功率精度测试" id="测量无功功率精度测试" is-ref="0"><![CDATA[local vg_GLErrorRel = GetTestPara("g_GLErrorRel"); --功率相对误差 
local vQa = GetReportValue("..\\", "Qa"); --A相无功功率 
local vQb = GetReportValue("..\\", "Qb"); --B相无功功率 
local vQc = GetReportValue("..\\", "Qc"); --C相无功功率 
local vQsum = GetReportValue("..\\", "Qsum"); --总无功功率 
local nRsltJdg = 0; 
nRsltJdg = nRsltJdg + CalAinError("Q$cVal$mag$f", vQsum, -1, vg_GLErrorRel); 
if(nRsltJdg==1) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; 
]]></script><script name="手动测试-报文验证" id="手动测试-报文验证" is-ref="0"><![CDATA[local nRsltJdg = GetRsltJdg("");

if (nRsltJdg == 1) then
    ShowMsg("---------------- BreakLoop(1)-----------------");
    BreakLoop(1);
end;
]]></script><script name="开出传动测试" id="开出传动测试" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "SwitchGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);
]]></script></scriptmngr><dataset name="ExtendRptDef" id="ExtendRptDef" data-type="dataset" write-mode="0" index="0"/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"><data name="DevIndex" id="DevIndex" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk197J611L83H54C03_39</bkmk><bkmk attr-id="value" process="" fill-mode="">BmkDevIndex</bkmk><bkmk attr-id="value" process="" fill-mode="">Bmk204F291H42E24G469_1</bkmk><bkmk attr-id="value" process="" fill-mode="">Bmk2C1C10D121D031E159G33_29</bkmk></data><data name="型号" id="Model" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk19J7H6C11K840F201_3a</bkmk><bkmk attr-id="value" process="" fill-mode="">BmkModel</bkmk><bkmk attr-id="value" process="" fill-mode="">Bmk204G301J61E23D149I5_a</bkmk><bkmk attr-id="value" process="" fill-mode="">Bmk211D012E10F31G450L8_28</bkmk></data><data name="TestBeginTime" id="TestBeginTime" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk197J61D1J84F369M9_3b</bkmk><bkmk attr-id="value" process="" fill-mode="">BmkTestBeginTime</bkmk><bkmk attr-id="value" process="" fill-mode="">Bmk20G4D29D142F23C031G3_3</bkmk><bkmk attr-id="value" process="" fill-mode="">Bmk211D012E14F36I669D0_28</bkmk></data><data name="Sign_File" id="Sign_File" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk197J6C1C1J8F497F2E3_3c</bkmk><bkmk attr-id="value" process="" fill-mode="">BmkSign_File</bkmk><bkmk attr-id="value" process="" fill-mode="">Bmk2B0F4D291H4D22G40F3C18_4</bkmk><bkmk attr-id="value" process="" fill-mode="">Bmk2C1C10D121H436E133J6_29</bkmk></data><data name="TestEndTime" id="TestEndTime" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkTestEndTime</bkmk></data><data name="TestType" id="TestType" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkTestType</bkmk></data><data name="Tester" id="Tester" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkTester</bkmk></data><data name="GuideBookFile" id="GuideBookFile" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkGuideBookFile</bkmk></data><data name="DeviceFile" id="DeviceFile" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkDeviceFile</bkmk></data><data name="Protocol" id="Protocol" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkProtocol</bkmk></data><data name="ProjectName" id="ProjectName" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkProjectName</bkmk></data><data name="TaskName" id="TaskName" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkTaskName</bkmk></data><data name="User" id="User" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkUser</bkmk></data><data name="UserCop" id="UserCop" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkUserCop</bkmk></data><data name="ReportSN" id="ReportSN" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkReportSN</bkmk></data><data name="TestError" id="TestError" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkTestError</bkmk></data><data name="装置信息编码" id="DeviceCode" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkDeviceCode</bkmk></data><data name="ID" id="ID" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkID</bkmk></data><data name="ip" id="ip" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmkip</bkmk></data><data name="ip_2" id="ip_2" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmkip_2</bkmk></data><data name="ip_3" id="ip_3" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmkip_3</bkmk></data><data name="COM_1" id="COM_1" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkCOM_1</bkmk></data><data name="COM_2" id="COM_2" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkCOM_2</bkmk></data><data name="COM_3" id="COM_3" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkCOM_3</bkmk></data><data name="类型" id="类型" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk类型</bkmk></data><data name="厂商" id="厂商" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk厂商</bkmk></data><data name="型号" id="型号" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk型号</bkmk></data><data name="硬件版本号" id="硬件版本号" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk硬件版本号</bkmk></data><data name="生产日期" id="生产日期" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk生产日期</bkmk></data><data name="类型" id="Type" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkType</bkmk></data><data name="厂商" id="Factory" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkFactory</bkmk></data><data name="硬件版本号" id="HdVer" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkHdVer</bkmk></data><data name="生产日期" id="PDate" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkPDate</bkmk></data><data name="udc-power" id="udc-power" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmkudc-power</bkmk><bkmk attr-id="value" process="V_EXADD" fill-mode="">Bmk211D012E16H54H578G35_28</bkmk></data><data name="Ac-Current" id="Ac-Current" precision=""><bkmk attr-id="value" process="" fill-mode="">BmkAc-Current</bkmk><bkmk attr-id="value" process="A_EXADD" fill-mode="">Bmk211D012E13E27E205F23_28</bkmk></data></rpt-map><device name="设备" id="CSC-103A-N" factory="" type="" is-time-sets-unit-s="1" src-device-model-file="D:\EPOTO\e-Report\Library\CSC-211-EB_52Q705XXXA2K102K101P21Y36-3_E.xml CSC-211-EB_QA5A2K102K101.xml CSC-101-EB_A5A1K102K101.xml CSC-101-EB_Q108A5A1K102K101.xml" dsv-text-with-value="1" dsv-text-with-utctime="1"><device-model name="设备数据模型" id="CPU" ppengine-progid="SdmEngine.PoEngine" pp-template="" device-model-file=""><ldevice name="装置信息" id="Device1" index="0"><dataset name="装置版本及编码" id="dsSdmDvmInfo" data-type="dsSdmDvmInfo" rw-attr=""><data name="配置" id="配置" data-type="" unit="" value="配置" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="配置$名称" id="配置$名称1" data-type="" value="CSC-163GA-N"/><value name="配置$版本" id="配置$版本2" data-type="" value="V1.00"/><value name="配置$CRC" id="配置$CRC3" data-type="" value="3DBD"/><value name="配置$时间" id="配置$时间4" data-type="" value="2020.09.15"/><value name="配置$名称" id="配置$名称1" data-type="" value="CSC-163GA-N"/><value name="配置$版本" id="配置$版本2" data-type="" value="V1.00"/><value name="配置$CRC" id="配置$CRC3" data-type="" value="3DBD"/><value name="配置$时间" id="配置$时间4" data-type="" value="2020.09.15"/><value name="配置$名称" id="配置$名称1" data-type="" value="CSC-163GA-N"/><value name="配置$版本" id="配置$版本2" data-type="" value="V1.00"/><value name="配置$CRC" id="配置$CRC3" data-type="" value="3DBD"/><value name="配置$时间" id="配置$时间4" data-type="" value="2020.09.15"/><value name="配置$名称" id="配置$名称1" data-type="" value="CSC-163GA-N"/><value name="配置$版本" id="配置$版本2" data-type="" value="V1.00"/><value name="配置$CRC" id="配置$CRC3" data-type="" value="3DBD"/><value name="配置$时间" id="配置$时间4" data-type="" value="2020.09.15"/></data><data name="CPU2" id="CPU2" data-type="" unit="" value="CPU2" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="CPU2$CPU2.ONLIST" id="CPU2$CPU2.ONLIST1" data-type="" value="CRC_B98F"/><value name="CPU2$CPU2.SF" id="CPU2$CPU2.SF2" data-type="" value="V1.00_180FFBC1_DCF9"/><value name="CPU2$CPU2.EXTLIB" id="CPU2$CPU2.EXTLIB3" data-type="" value="V1.00_20210629_53FA"/><value name="CPU2$CPU2.KERNEL" id="CPU2$CPU2.KERNEL4" data-type="" value="V2.10_20210908_99F2"/><value name="CPU2$CPU2.ESDC" id="CPU2$CPU2.ESDC5" data-type="" value="V1.00_180FFBC1_2AD4"/><value name="CPU2$CPU2.HAL" id="CPU2$CPU2.HAL6" data-type="" value="CRC_BBAB"/><value name="CPU2$CPU2.FPGA2" id="CPU2$CPU2.FPGA27" data-type="" value="V9.05.79.6E_20210819_A78C"/><value name="CPU2$CPU2.CORE0" id="CPU2$CPU2.CORE08" data-type="" value="V4.46_20230301_C201"/><value name="CPU2$CPU2.ONLIST" id="CPU2$CPU2.ONLIST1" data-type="" value="CRC_B98F"/><value name="CPU2$CPU2.SF" id="CPU2$CPU2.SF2" data-type="" value="V1.00_180FFBC1_DCF9"/><value name="CPU2$CPU2.EXTLIB" id="CPU2$CPU2.EXTLIB3" data-type="" value="V1.00_20210629_53FA"/><value name="CPU2$CPU2.KERNEL" id="CPU2$CPU2.KERNEL4" data-type="" value="V2.10_20210908_99F2"/><value name="CPU2$CPU2.ESDC" id="CPU2$CPU2.ESDC5" data-type="" value="V1.00_180FFBC1_2AD4"/><value name="CPU2$CPU2.HAL" id="CPU2$CPU2.HAL6" data-type="" value="CRC_BBAB"/><value name="CPU2$CPU2.FPGA2" id="CPU2$CPU2.FPGA27" data-type="" value="V9.05.79.6E_20210819_A78C"/><value name="CPU2$CPU2.CORE0" id="CPU2$CPU2.CORE08" data-type="" value="V4.46_20230301_C201"/></data><data name="CPU1" id="CPU1" data-type="" unit="" value="CPU1" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="CPU1$CPU1.ONLIST" id="CPU1$CPU1.ONLIST1" data-type="" value="CRC_B98F"/><value name="CPU1$CPU1.SF" id="CPU1$CPU1.SF2" data-type="" value="V1.00_180FFBC1_DCF9"/><value name="CPU1$CPU1.EXTLIB" id="CPU1$CPU1.EXTLIB3" data-type="" value="V1.00_20210629_53FA"/><value name="CPU1$CPU1.KERNEL" id="CPU1$CPU1.KERNEL4" data-type="" value="V2.10_20210908_99F2"/><value name="CPU1$CPU1.ESDC" id="CPU1$CPU1.ESDC5" data-type="" value="V1.00_180FFBC1_2AD4"/><value name="CPU1$CPU1.HAL" id="CPU1$CPU1.HAL6" data-type="" value="CRC_7CDF"/><value name="CPU1$CPU1.FPGA2" id="CPU1$CPU1.FPGA27" data-type="" value="V9.05.79.6E_20210819_A78C"/><value name="CPU1$CPU1.CORE0" id="CPU1$CPU1.CORE08" data-type="" value="V4.46_20230301_C201"/><value name="CPU1$CPU1.ONLIST" id="CPU1$CPU1.ONLIST1" data-type="" value="CRC_B98F"/><value name="CPU1$CPU1.SF" id="CPU1$CPU1.SF2" data-type="" value="V1.00_180FFBC1_DCF9"/><value name="CPU1$CPU1.EXTLIB" id="CPU1$CPU1.EXTLIB3" data-type="" value="V1.00_20210629_53FA"/><value name="CPU1$CPU1.KERNEL" id="CPU1$CPU1.KERNEL4" data-type="" value="V2.10_20210908_99F2"/><value name="CPU1$CPU1.ESDC" id="CPU1$CPU1.ESDC5" data-type="" value="V1.00_180FFBC1_2AD4"/><value name="CPU1$CPU1.HAL" id="CPU1$CPU1.HAL6" data-type="" value="CRC_7CDF"/><value name="CPU1$CPU1.FPGA2" id="CPU1$CPU1.FPGA27" data-type="" value="V9.05.79.6E_20210819_A78C"/><value name="CPU1$CPU1.CORE0" id="CPU1$CPU1.CORE08" data-type="" value="V4.46_20230301_C201"/></data><data name="MASTER" id="MASTER" data-type="" unit="" value="MASTER" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="MASTER$MASTER" id="MASTER$MASTER1" data-type="" value="V1.017_20210928_7958"/><value name="MASTER$RTOS" id="MASTER$RTOS2" data-type="" value="V1.2.6_20220826_24F7 "/><value name="MASTER$BSPAMP" id="MASTER$BSPAMP3" data-type="" value="V1.1.15_20210915_5206"/><value name="MASTER$CORE0.BIN" id="MASTER$CORE0.BIN4" data-type="" value="V4.46_20230301_C201"/><value name="MASTER$FPGA1" id="MASTER$FPGA15" data-type="" value="V9.07.84.B4_20230321_E01C"/><value name="MASTER$FPGA2" id="MASTER$FPGA26" data-type="" value="V9.06.79.6F_20210831_CB75 "/><value name="MASTER$HAL" id="MASTER$HAL7" data-type="" value="CRC_B4C7"/><value name="MASTER$CPUSDC" id="MASTER$CPUSDC8" data-type="" value="V1.000.000.000_210922_180FFBC1"/></data><data name="MSTSDC,V1.000.000.000_210DI1" id="MSTSDC,V1.000.000.000_210DI1" data-type="" unit="" value="MSTSDC,V1.000.000.000_210DI1" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="MSTSDC,V1.000.000.000_210DI1$DI" id="MSTSDC,V1.000.000.000_210DI1$DI1" data-type="" value="V0.40_202203_A46D"/><value name="MSTSDC,V1.000.000.000_210DI1$BOOT1" id="MSTSDC,V1.000.000.000_210DI1$BOOT12" data-type="" value="V1.10_202104_CCF7"/></data><data name="DIO2" id="DIO2" data-type="" unit="" value="DIO2" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="DIO2$DIO" id="DIO2$DIO1" data-type="" value="V0.40_202203_A46D"/><value name="DIO2$BOOT1" id="DIO2$BOOT12" data-type="" value="V1.10_202104_CCF7"/></data><data name="DO1" id="DO1" data-type="" unit="" value="DO1" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="DO1$DO" id="DO1$DO1" data-type="" value="V0.40_202203_A46D"/><value name="DO1$BOOT1" id="DO1$BOOT12" data-type="" value="V1.10_202104_CCF7"/></data><data name="MMI" id="MMI" data-type="" unit="" value="MMI" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="MMI$LCD" id="MMI$LCD1" data-type="" value="V0.39_202305_E462"/><value name="MMI$BOOT1" id="MMI$BOOT12" data-type="" value="V1.10_202104_CCF7"/></data><data name="sdccrc" id="sdccrc" data-type="" unit="" value="sdccrc" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="sdccrc$SDCCRC" id="sdccrc$SDCCRC1" data-type="" value="21A8_FBC1"/></data></dataset><dataset name="测控参数" id="dsMeasSetting" data-type="dsMeasSetting" rw-attr=""/><dataset name="系统定值" id="dsSysSetting" data-type="dsSysSetting" rw-attr=""><data name="调刻度用电压二次额定值" id="调刻度用电压二次额定值" data-type="" unit="" value="50.0" default-value="" min="10" max="100" data-index="0" step="1"/><data name="定值范围用系数(Z)" id="定值范围用系数(Z)" data-type="" unit="" value="1.0" default-value="" min="0.2" max="1" data-index="0" step="0.8"/><data name="死区用相电压二次额定值" id="死区用相电压二次额定值" data-type="" unit="" value="100.000" default-value="" min="0" max="100" data-index="0" step="0.001"/><data name="死区用有功基准值" id="死区用有功基准值" data-type="" unit="" value="1000.000" default-value="" min="0" max="1000" data-index="0" step="0.001"/><data name="死区用无功基准值" id="死区用无功基准值" data-type="" unit="" value="1000.000" default-value="" min="0" max="1000" data-index="0" step="0.001"/><data name="与老平台通讯" id="与老平台通讯" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="0"/><data name="NHH模式" id="NHH模式" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="0"/><data name="JD模式" id="JD模式" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="0"/><data name="BH模式" id="BH模式" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="0"/><data name="DCDA模式" id="DCDA模式" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="0"/><data name="开入电压额定值" id="开入电压额定值" data-type="" unit="" value="5" default-value="" min="3" max="5" data-index="0" step="3"/></dataset><dataset name="保护定值" id="dsSetting" data-type="dsSetting" rw-attr=""><data name="变化量启动电流定值" id="变化量启动电流定值《1》" data-type="" unit="" value="0.500" default-value="" min="0.05" max="0.5" data-index="0" step="0.001"/><data name="零序启动电流定值" id="零序启动电流定值《2》" data-type="" unit="" value="0.500" default-value="" min="0.05" max="0.5" data-index="0" step="0.001"/><data name="差动动作电流定值" id="差动动作电流定值《3》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="CT断线后分相差动定值" id="CT断线后分相差动定值《4》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="本侧识别码" id="本侧识别码《5》" data-type="" unit="" value="0" default-value="" min="0" max="65535" data-index="0" step="1"/><data name="对侧识别码" id="对侧识别码《6》" data-type="" unit="" value="1" default-value="" min="0" max="65535" data-index="0" step="1"/><data name="线路正序阻抗定值" id="线路正序阻抗定值《7》" data-type="" unit="" value="655.000" default-value="" min="0.05" max="655" data-index="0" step="0.001"/><data name="线路正序灵敏角" id="线路正序灵敏角《8》" data-type="" unit="" value="89.000" default-value="" min="30" max="89" data-index="0" step="0.001"/><data name="线路零序阻抗定值" id="线路零序阻抗定值《9》" data-type="" unit="" value="655.000" default-value="" min="0.05" max="655" data-index="0" step="0.001"/><data name="线路零序灵敏角" id="线路零序灵敏角《10》" data-type="" unit="" value="89.000" default-value="" min="30" max="89" data-index="0" step="0.001"/><data name="线路总长度" id="线路总长度《11》" data-type="" unit="" value="655.000" default-value="" min="0" max="655" data-index="0" step="0.001"/><data name="接地距离Ⅰ段定值" id="接地距离Ⅰ段定值《12》" data-type="" unit="" value="0.050" default-value="" min="0.05" max="200" data-index="0" step="0.001"/><data name="接地距离Ⅰ段时间" id="接地距离Ⅰ段时间《13》" data-type="" unit="" value="10.000" default-value="" min="0" max="10" data-index="0" step="0.001"/><data name="接地距离Ⅱ段定值" id="接地距离Ⅱ段定值《14》" data-type="" unit="" value="0.050" default-value="" min="0.05" max="200" data-index="0" step="0.001"/><data name="接地距离Ⅱ段时间" id="接地距离Ⅱ段时间《15》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="接地距离Ⅲ段定值" id="接地距离Ⅲ段定值《16》" data-type="" unit="" value="0.050" default-value="" min="0.05" max="200" data-index="0" step="0.001"/><data name="接地距离Ⅲ段时间" id="接地距离Ⅲ段时间《17》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="相间距离Ⅰ段定值" id="相间距离Ⅰ段定值《18》" data-type="" unit="" value="0.050" default-value="" min="0.05" max="200" data-index="0" step="0.001"/><data name="相间距离Ⅰ段时间" id="相间距离Ⅰ段时间《19》" data-type="" unit="" value="10.000" default-value="" min="0" max="10" data-index="0" step="0.001"/><data name="相间距离Ⅱ段定值" id="相间距离Ⅱ段定值《20》" data-type="" unit="" value="0.050" default-value="" min="0.05" max="200" data-index="0" step="0.001"/><data name="相间距离Ⅱ段时间" id="相间距离Ⅱ段时间《21》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="相间距离Ⅲ段定值" id="相间距离Ⅲ段定值《22》" data-type="" unit="" value="0.050" default-value="" min="0.05" max="200" data-index="0" step="0.001"/><data name="相间距离Ⅲ段时间" id="相间距离Ⅲ段时间《23》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="PT断线过流Ⅰ段定值" id="PT断线过流Ⅰ段定值《24》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="PT断线过流Ⅰ段时间" id="PT断线过流Ⅰ段时间《25》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="PT断线过流Ⅱ段定值" id="PT断线过流Ⅱ段定值《26》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="PT断线过流Ⅱ段时间" id="PT断线过流Ⅱ段时间《27》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="零序过流Ⅰ段定值" id="零序过流Ⅰ段定值《28》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="零序过流Ⅰ段时间" id="零序过流Ⅰ段时间《29》" data-type="" unit="" value="10.000" default-value="" min="0" max="10" data-index="0" step="0.001"/><data name="零序过流Ⅱ段定值" id="零序过流Ⅱ段定值《30》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="零序过流Ⅱ段时间" id="零序过流Ⅱ段时间《31》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="零序过流Ⅲ段定值" id="零序过流Ⅲ段定值《32》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="零序过流Ⅲ段时间" id="零序过流Ⅲ段时间《33》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="零序过流Ⅳ段定值" id="零序过流Ⅳ段定值《34》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="零序过流Ⅳ段时间" id="零序过流Ⅳ段时间《35》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="零序过流加速段定值" id="零序过流加速段定值《36》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="过负荷告警定值" id="过负荷告警定值《37》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="过负荷告警时间" id="过负荷告警时间《38》" data-type="" unit="" value="10.000" default-value="" min="0.01" max="10" data-index="0" step="0.001"/><data name="重合闸时间" id="重合闸时间《40》" data-type="" unit="" value="10.000" default-value="" min="0.1" max="10" data-index="0" step="0.001"/><data name="同期合闸角" id="同期合闸角《39》" data-type="" unit="" value="30.000" default-value="" min="0" max="90" data-index="0" step="0.001"/><data name="振荡闭锁过流" id="振荡闭锁过流《41》" data-type="" unit="" value="20.000" default-value="" min="0.05" max="20" data-index="0" step="0.001"/><data name="负荷限制电阻定值" id="负荷限制电阻定值《42》" data-type="" unit="" value="0.050" default-value="" min="0.05" max="200" data-index="0" step="0.001"/><data name="零序电抗补偿系数KX" id="零序电抗补偿系数KX《43》" data-type="" unit="" value="10.000" default-value="" min="-0.33" max="10" data-index="0" step="0.001"/><data name="零序电阻补偿系数KR" id="零序电阻补偿系数KR《44》" data-type="" unit="" value="10.000" default-value="" min="-0.33" max="10" data-index="0" step="0.001"/><data name="纵联差动保护" id="纵联差动保护《45》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="振荡闭锁元件" id="振荡闭锁元件《46》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="距离保护Ⅰ段" id="距离保护Ⅰ段《47》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="距离保护Ⅱ段" id="距离保护Ⅱ段《48》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="距离保护Ⅲ段" id="距离保护Ⅲ段《49》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="零序过流Ⅰ段" id="零序过流Ⅰ段《50》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="零序过流Ⅱ段" id="零序过流Ⅱ段《51》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="零序过流Ⅲ段" id="零序过流Ⅲ段《52》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="零序过流Ⅳ段" id="零序过流Ⅳ段《53》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="零序过流Ⅰ段经方向" id="零序过流Ⅰ段经方向《54》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="零序过流Ⅱ段经方向" id="零序过流Ⅱ段经方向《55》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="零序过流Ⅲ段经方向" id="零序过流Ⅲ段经方向《56》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="零序过流Ⅳ段经方向" id="零序过流Ⅳ段经方向《57》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="距离Ⅱ段闭锁重合闸" id="距离Ⅱ段闭锁重合闸《58》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="零序Ⅲ、Ⅳ段闭锁重合闸" id="零序Ⅲ、Ⅳ段闭锁重合闸《59》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="多相故障闭锁重合闸" id="多相故障闭锁重合闸《60》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="停用重合闸" id="停用重合闸《61》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="重合闸检同期" id="重合闸检同期《62》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="重合闸检母无压线有压" id="重合闸检母无压线有压《63》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="重合闸检母有压线无压" id="重合闸检母有压线无压《64》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="重合闸检母无压线无压" id="重合闸检母无压线无压《65》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="TWJ启动重合闸" id="TWJ启动重合闸《66》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="保护启动重合闸" id="保护启动重合闸《67》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="通信内时钟" id="通信内时钟《68》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="远跳经启动闭锁" id="远跳经启动闭锁《69》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="通道环回试验" id="通道环回试验《70》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/><data name="过负荷告警" id="过负荷告警《71》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="0"/><data name="控制回路1断线自检" id="控制回路1断线自检《72》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="0"/><data name="控制回路2断线自检" id="控制回路2断线自检《73》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="0"/><data name="PT断线检测投入" id="PT断线检测投入《75》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="0"/><data name="冲击性负荷" id="冲击性负荷《74》" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/></dataset><dataset name="装置参数" id="dsParameter" data-type="dsParameter" rw-attr=""><data name="CT一次额定值" id="CT一次额定值" data-type="" unit="" value="1000.0" default-value="" min="1" max="9999" data-index="0" step="0.1"/><data name="CT二次额定值" id="CT二次额定值" data-type="" unit="" value="1.0" default-value="" min="1" max="5" data-index="0" step="4"/><data name="PT一次线电压" id="PT一次线电压" data-type="" unit="" value="110.0" default-value="" min="1" max="150" data-index="0" step="0.1"/><data name="通道类型" id="通道类型" data-type="" unit="" value="0" default-value="" min="0" max="1" data-index="0" step="1"/></dataset><dataset name="压板" id="dsRelayEna" data-type="dsRelayEna" rw-attr=""><data name="纵联差动保护软压板" id="纵联差动保护软压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="距离保护软压板" id="距离保护软压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="零序过流保护软压板" id="零序过流保护软压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="停用重合闸软压板" id="停用重合闸软压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="远方投退压板软压板" id="远方投退压板软压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="远方切换定值区软压板" id="远方切换定值区软压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="远方修改定值软压板" id="远方修改定值软压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="纵联差动保护硬压板" id="纵联差动保护硬压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="距离保护硬压板" id="距离保护硬压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="零序过流保护硬压板" id="零序过流保护硬压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="停用重合闸硬压板" id="停用重合闸硬压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="远方操作硬压板" id="远方操作硬压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="检修状态硬压板" id="检修状态硬压板" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/></dataset><dataset name="开入" id="dsRelayDin" data-type="dsRelayDin" rw-attr=""><data name="停用/闭锁重合闸" id="停用/闭锁重合闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="信号复归" id="信号复归" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="断路器跳闸位置" id="断路器跳闸位置" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="断路器合闸位置" id="断路器合闸位置" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="HWJ1" id="HWJ1" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="HWJ2" id="HWJ2" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="TWJ" id="TWJ" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="远方跳闸" id="远方跳闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="压力低(弹簧未储能)闭重" id="压力低(弹簧未储能)闭重" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="重合闸充电完成" id="重合闸充电完成" data-type="" unit="" value="1" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="投Ⅰ母电压" id="投Ⅰ母电压" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="投Ⅱ母电压" id="投Ⅱ母电压" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="永跳1" id="永跳1" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="永跳2" id="永跳2" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="位置不对应" id="位置不对应" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="第一组跳闸" id="第一组跳闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="第二组跳闸" id="第二组跳闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="压力低闭锁合闸" id="压力低闭锁合闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="压力低闭锁操作" id="压力低闭锁操作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="外部操作箱TWJ" id="外部操作箱TWJ" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="外部操作箱HWJ1" id="外部操作箱HWJ1" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="外部操作箱HWJ2" id="外部操作箱HWJ2" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="定值变化" id="定值变化" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/></dataset><dataset name="开出传动" id="dsDout" data-type="dsDout" rw-attr=""><data name="装置故障" id="装置故障" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="运行异常" id="运行异常" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="保护跳闸" id="保护跳闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="永跳" id="永跳" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="重合闸" id="重合闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="过负荷告警" id="过负荷告警" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="通道告警" id="通道告警" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="ProtDO:装置故障" id="ProtDO:装置故障" data-type="" unit="" value="1" default-value="1" min="0" max="0" data-index="0" step="0.001"/><data name="ProtDO:运行异常" id="ProtDO:运行异常" data-type="" unit="" value="0" default-value="0" min="0" max="0" data-index="0" step="0.001"/><data name="ProtDO:保护跳闸" id="ProtDO:保护跳闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="ProtDO:永跳" id="ProtDO:永跳" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="ProtDO:重合闸" id="ProtDO:重合闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="ProtDO:通道告警" id="ProtDO:通道告警" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="ProtDO:过负荷告警" id="ProtDO:过负荷告警" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/></dataset><dataset name="模拟量" id="dsAnAin" data-type="dsAnAin" rw-attr=""><data name="保护电压A相" id="保护电压A相" data-type="" unit="" value="0.000" default-value="0.000" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护电压A相$cVal$mag$f" id="Rel_保护电压A相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护电压A相$cVal$mag$f" id="Abs_保护电压A相$cVal$mag$f" data-type="" value="0.000"/><value name="保护电压A相$cVal$mag$f" id="保护电压A相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护电压B相" id="保护电压B相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护电压B相$cVal$mag$f" id="Rel_保护电压B相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护电压B相$cVal$mag$f" id="Abs_保护电压B相$cVal$mag$f" data-type="" value="0.000"/><value name="保护电压B相$cVal$mag$f" id="保护电压B相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护电压C相" id="保护电压C相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护电压C相$cVal$mag$f" id="Rel_保护电压C相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护电压C相$cVal$mag$f" id="Abs_保护电压C相$cVal$mag$f" data-type="" value="0.000"/><value name="保护电压C相$cVal$mag$f" id="保护电压C相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护零序电压" id="保护零序电压" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护零序电压$cVal$mag$f" id="Rel_保护零序电压$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护零序电压$cVal$mag$f" id="Abs_保护零序电压$cVal$mag$f" data-type="" value="0.000"/><value name="保护零序电压$cVal$mag$f" id="保护零序电压$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护同期电压" id="保护同期电压" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护同期电压$cVal$mag$f" id="Rel_保护同期电压$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护同期电压$cVal$mag$f" id="Abs_保护同期电压$cVal$mag$f" data-type="" value="0.000"/><value name="保护同期电压$cVal$mag$f" id="保护同期电压$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护电流A相" id="保护电流A相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护电流A相$cVal$mag$f" id="Rel_保护电流A相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护电流A相$cVal$mag$f" id="Abs_保护电流A相$cVal$mag$f" data-type="" value="0.000"/><value name="保护电流A相$cVal$mag$f" id="保护电流A相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护电流B相" id="保护电流B相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护电流B相$cVal$mag$f" id="Rel_保护电流B相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护电流B相$cVal$mag$f" id="Abs_保护电流B相$cVal$mag$f" data-type="" value="0.000"/><value name="保护电流B相$cVal$mag$f" id="保护电流B相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护电流C相" id="保护电流C相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护电流C相$cVal$mag$f" id="Rel_保护电流C相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护电流C相$cVal$mag$f" id="Abs_保护电流C相$cVal$mag$f" data-type="" value="0.000"/><value name="保护电流C相$cVal$mag$f" id="保护电流C相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护零序电流" id="保护零序电流" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护零序电流$cVal$mag$f" id="Rel_保护零序电流$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护零序电流$cVal$mag$f" id="Abs_保护零序电流$cVal$mag$f" data-type="" value="0.000"/><value name="保护零序电流$cVal$mag$f" id="保护零序电流$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护冗余电压A相" id="保护冗余电压A相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护冗余电压A相$cVal$mag$f" id="Rel_保护冗余电压A相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护冗余电压A相$cVal$mag$f" id="Abs_保护冗余电压A相$cVal$mag$f" data-type="" value="0.000"/><value name="保护冗余电压A相$cVal$mag$f" id="保护冗余电压A相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护冗余电压B相" id="保护冗余电压B相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护冗余电压B相$cVal$mag$f" id="Rel_保护冗余电压B相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护冗余电压B相$cVal$mag$f" id="Abs_保护冗余电压B相$cVal$mag$f" data-type="" value="0.000"/><value name="保护冗余电压B相$cVal$mag$f" id="保护冗余电压B相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护冗余电压C相" id="保护冗余电压C相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护冗余电压C相$cVal$mag$f" id="Rel_保护冗余电压C相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护冗余电压C相$cVal$mag$f" id="Abs_保护冗余电压C相$cVal$mag$f" data-type="" value="0.000"/><value name="保护冗余电压C相$cVal$mag$f" id="保护冗余电压C相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护冗余零序电压" id="保护冗余零序电压" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护冗余零序电压$cVal$mag$f" id="Rel_保护冗余零序电压$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护冗余零序电压$cVal$mag$f" id="Abs_保护冗余零序电压$cVal$mag$f" data-type="" value="0.000"/><value name="保护冗余零序电压$cVal$mag$f" id="保护冗余零序电压$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护冗余同期电压" id="保护冗余同期电压" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护冗余同期电压$cVal$mag$f" id="Rel_保护冗余同期电压$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护冗余同期电压$cVal$mag$f" id="Abs_保护冗余同期电压$cVal$mag$f" data-type="" value="0.000"/><value name="保护冗余同期电压$cVal$mag$f" id="保护冗余同期电压$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护冗余电流A相" id="保护冗余电流A相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护冗余电流A相$cVal$mag$f" id="Rel_保护冗余电流A相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护冗余电流A相$cVal$mag$f" id="Abs_保护冗余电流A相$cVal$mag$f" data-type="" value="0.000"/><value name="保护冗余电流A相$cVal$mag$f" id="保护冗余电流A相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护冗余电流B相" id="保护冗余电流B相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护冗余电流B相$cVal$mag$f" id="Rel_保护冗余电流B相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护冗余电流B相$cVal$mag$f" id="Abs_保护冗余电流B相$cVal$mag$f" data-type="" value="0.000"/><value name="保护冗余电流B相$cVal$mag$f" id="保护冗余电流B相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护冗余电流C相" id="保护冗余电流C相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护冗余电流C相$cVal$mag$f" id="Rel_保护冗余电流C相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护冗余电流C相$cVal$mag$f" id="Abs_保护冗余电流C相$cVal$mag$f" data-type="" value="0.000"/><value name="保护冗余电流C相$cVal$mag$f" id="保护冗余电流C相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护冗余零序电流" id="保护冗余零序电流" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护冗余零序电流$cVal$mag$f" id="Rel_保护冗余零序电流$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护冗余零序电流$cVal$mag$f" id="Abs_保护冗余零序电流$cVal$mag$f" data-type="" value="0.000"/><value name="保护冗余零序电流$cVal$mag$f" id="保护冗余零序电流$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护差流A相" id="保护差流A相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护差流A相$cVal$mag$f" id="Rel_保护差流A相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护差流A相$cVal$mag$f" id="Abs_保护差流A相$cVal$mag$f" data-type="" value="0.000"/><value name="保护差流A相$cVal$mag$f" id="保护差流A相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护差流B相" id="保护差流B相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护差流B相$cVal$mag$f" id="Rel_保护差流B相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护差流B相$cVal$mag$f" id="Abs_保护差流B相$cVal$mag$f" data-type="" value="0.000"/><value name="保护差流B相$cVal$mag$f" id="保护差流B相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护差流C相" id="保护差流C相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护差流C相$cVal$mag$f" id="Rel_保护差流C相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护差流C相$cVal$mag$f" id="Abs_保护差流C相$cVal$mag$f" data-type="" value="0.000"/><value name="保护差流C相$cVal$mag$f" id="保护差流C相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护制动电流A相" id="保护制动电流A相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护制动电流A相$cVal$mag$f" id="Rel_保护制动电流A相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护制动电流A相$cVal$mag$f" id="Abs_保护制动电流A相$cVal$mag$f" data-type="" value="0.000"/><value name="保护制动电流A相$cVal$mag$f" id="保护制动电流A相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护制动电流B相" id="保护制动电流B相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护制动电流B相$cVal$mag$f" id="Rel_保护制动电流B相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护制动电流B相$cVal$mag$f" id="Abs_保护制动电流B相$cVal$mag$f" data-type="" value="0.000"/><value name="保护制动电流B相$cVal$mag$f" id="保护制动电流B相$cVal$mag$f" data-type="" value="0.000"/></data><data name="保护制动电流C相" id="保护制动电流C相" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_保护制动电流C相$cVal$mag$f" id="Rel_保护制动电流C相$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_保护制动电流C相$cVal$mag$f" id="Abs_保护制动电流C相$cVal$mag$f" data-type="" value="0.000"/><value name="保护制动电流C相$cVal$mag$f" id="保护制动电流C相$cVal$mag$f" data-type="" value="0.000"/></data><data name="本侧电流A" id="本侧电流A" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_本侧电流A$cVal$mag$f" id="Rel_本侧电流A$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_本侧电流A$cVal$mag$f" id="Abs_本侧电流A$cVal$mag$f" data-type="" value="0.000"/><value name="本侧电流A$cVal$mag$f" id="本侧电流A$cVal$mag$f" data-type="" value="0.000"/></data><data name="本侧电流B" id="本侧电流B" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_本侧电流B$cVal$mag$f" id="Rel_本侧电流B$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_本侧电流B$cVal$mag$f" id="Abs_本侧电流B$cVal$mag$f" data-type="" value="0.000"/><value name="本侧电流B$cVal$mag$f" id="本侧电流B$cVal$mag$f" data-type="" value="0.000"/></data><data name="本侧电流C" id="本侧电流C" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_本侧电流C$cVal$mag$f" id="Rel_本侧电流C$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_本侧电流C$cVal$mag$f" id="Abs_本侧电流C$cVal$mag$f" data-type="" value="0.000"/><value name="本侧电流C$cVal$mag$f" id="本侧电流C$cVal$mag$f" data-type="" value="0.000"/></data><data name="对侧电流A" id="对侧电流A" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_对侧电流A$cVal$mag$f" id="Rel_对侧电流A$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_对侧电流A$cVal$mag$f" id="Abs_对侧电流A$cVal$mag$f" data-type="" value="0.000"/><value name="对侧电流A$cVal$mag$f" id="对侧电流A$cVal$mag$f" data-type="" value="0.000"/></data><data name="对侧电流B" id="对侧电流B" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_对侧电流B$cVal$mag$f" id="Rel_对侧电流B$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_对侧电流B$cVal$mag$f" id="Abs_对侧电流B$cVal$mag$f" data-type="" value="0.000"/><value name="对侧电流B$cVal$mag$f" id="对侧电流B$cVal$mag$f" data-type="" value="0.000"/></data><data name="对侧电流C" id="对侧电流C" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_对侧电流C$cVal$mag$f" id="Rel_对侧电流C$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_对侧电流C$cVal$mag$f" id="Abs_对侧电流C$cVal$mag$f" data-type="" value="0.000"/><value name="对侧电流C$cVal$mag$f" id="对侧电流C$cVal$mag$f" data-type="" value="0.000"/></data><data name="P1" id="P1" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_P1$cVal$mag$f" id="Rel_P1$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_P1$cVal$mag$f" id="Abs_P1$cVal$mag$f" data-type="" value="0.000"/><value name="P1$cVal$mag$f" id="P1$cVal$mag$f" data-type="" value="0.000"/></data><data name="Q1" id="Q1" data-type="" unit="" value="0.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_Q1$cVal$mag$f" id="Rel_Q1$cVal$mag$f" data-type="" value="0.000"/><value name="Abs_Q1$cVal$mag$f" id="Abs_Q1$cVal$mag$f" data-type="" value="0.000"/><value name="Q1$cVal$mag$f" id="Q1$cVal$mag$f" data-type="" value="0.000"/></data><data name="纵联通道延时" id="纵联通道延时" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_纵联通道延时$cVal$mag$f" id="Rel_纵联通道延时$cVal$mag$f" data-type="" value=""/><value name="Abs_纵联通道延时$cVal$mag$f" id="Abs_纵联通道延时$cVal$mag$f" data-type="" value=""/><value name="纵联通道延时$cVal$mag$f" id="纵联通道延时$cVal$mag$f" data-type="" value=""/></data><data name="纵联通道对侧识别码" id="纵联通道对侧识别码" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_纵联通道对侧识别码$cVal$mag$f" id="Rel_纵联通道对侧识别码$cVal$mag$f" data-type="" value=""/><value name="Abs_纵联通道对侧识别码$cVal$mag$f" id="Abs_纵联通道对侧识别码$cVal$mag$f" data-type="" value=""/><value name="纵联通道对侧识别码$cVal$mag$f" id="纵联通道对侧识别码$cVal$mag$f" data-type="" value=""/></data><data name="纵联通道丢帧总数" id="纵联通道丢帧总数" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_纵联通道丢帧总数$cVal$mag$f" id="Rel_纵联通道丢帧总数$cVal$mag$f" data-type="" value=""/><value name="Abs_纵联通道丢帧总数$cVal$mag$f" id="Abs_纵联通道丢帧总数$cVal$mag$f" data-type="" value=""/><value name="纵联通道丢帧总数$cVal$mag$f" id="纵联通道丢帧总数$cVal$mag$f" data-type="" value=""/></data><data name="纵联通道状态" id="纵联通道状态" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_纵联通道状态$cVal$mag$f" id="Rel_纵联通道状态$cVal$mag$f" data-type="" value=""/><value name="Abs_纵联通道状态$cVal$mag$f" id="Abs_纵联通道状态$cVal$mag$f" data-type="" value=""/><value name="纵联通道状态$cVal$mag$f" id="纵联通道状态$cVal$mag$f" data-type="" value=""/></data><data name="CTM" id="CTM" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_CTM$cVal$mag$f" id="Rel_CTM$cVal$mag$f" data-type="" value=""/><value name="Abs_CTM$cVal$mag$f" id="Abs_CTM$cVal$mag$f" data-type="" value=""/><value name="CTM$cVal$mag$f" id="CTM$cVal$mag$f" data-type="" value=""/></data><data name="CTN" id="CTN" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_CTN$cVal$mag$f" id="Rel_CTN$cVal$mag$f" data-type="" value=""/><value name="Abs_CTN$cVal$mag$f" id="Abs_CTN$cVal$mag$f" data-type="" value=""/><value name="CTN$cVal$mag$f" id="CTN$cVal$mag$f" data-type="" value=""/></data><data name="重合闸方式" id="重合闸方式" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_重合闸方式$cVal$mag$f" id="Rel_重合闸方式$cVal$mag$f" data-type="" value=""/><value name="Abs_重合闸方式$cVal$mag$f" id="Abs_重合闸方式$cVal$mag$f" data-type="" value=""/><value name="重合闸方式$cVal$mag$f" id="重合闸方式$cVal$mag$f" data-type="" value=""/></data><data name="重合闸检定方式" id="重合闸检定方式" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_重合闸检定方式$cVal$mag$f" id="Rel_重合闸检定方式$cVal$mag$f" data-type="" value=""/><value name="Abs_重合闸检定方式$cVal$mag$f" id="Abs_重合闸检定方式$cVal$mag$f" data-type="" value=""/><value name="重合闸检定方式$cVal$mag$f" id="重合闸检定方式$cVal$mag$f" data-type="" value=""/></data><data name="重合闸充电状态" id="重合闸充电状态" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_重合闸充电状态$cVal$mag$f" id="Rel_重合闸充电状态$cVal$mag$f" data-type="" value=""/><value name="Abs_重合闸充电状态$cVal$mag$f" id="Abs_重合闸充电状态$cVal$mag$f" data-type="" value=""/><value name="重合闸充电状态$cVal$mag$f" id="重合闸充电状态$cVal$mag$f" data-type="" value=""/></data><data name="同期相别" id="同期相别" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Rel_同期相别$cVal$mag$f" id="Rel_同期相别$cVal$mag$f" data-type="" value=""/><value name="Abs_同期相别$cVal$mag$f" id="Abs_同期相别$cVal$mag$f" data-type="" value=""/><value name="同期相别$cVal$mag$f" id="同期相别$cVal$mag$f" data-type="" value=""/></data></dataset><dataset name="测量量" id="dsAin" data-type="dsAin" rw-attr=""/><dataset name="运行信息" id="dsSdmDvmRunInfor" data-type="dsSdmDvmRunInfor" rw-attr=""><data name="装置温度" id="装置温度" data-type="" unit="" value="41.000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="mag$f" id="mag$f" data-type="" value="41.000"/></data><data name="装置电压+3.3V" id="装置电压+3.3V" data-type="" unit="" value="3.293" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="mag$f" id="mag$f" data-type="" value="3.293"/></data><data name="+5V电压" id="+5V电压" data-type="" unit="" value="5.123" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="mag$f" id="mag$f" data-type="" value="5.123"/></data></dataset><dataset name="装置属性信息" id="dsSdmDvmAttr" data-type="dsSdmDvmAttr" rw-attr=""><data name="调整零漂" id="AdjustZero" data-type="INT" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="调整刻度" id="AdjustScale" data-type="INT" unit="" value="0" default-value="0" min="0" max="0" data-index="0" step="0.001"/><data name="角度修正" id="AdjustAngle" data-type="INT" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="对时异常" id="TimingAnomaly" data-type="INT" unit="" value="0" default-value="0" min="0" max="0" data-index="0" step="0.001"/><data name="电度清零" id="ClearDegree" data-type="INT" unit="" value="0" default-value="0" min="0" max="0" data-index="0" step="0.001"/><data name="装置唯一编码" id="DevOnlyCode" data-type="CSTRING" unit="" value="SFJB400001234500000001" default-value="SFJB400001234500000001" min="0" max="0" data-index="0" step="0.001"/><data name="实例ID" id="ObjectCase_ID" data-type="INT" unit="" value="1" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="参数组ID" id="Param_ID" data-type="INT" unit="" value="4" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="数据ID" id="Data_ID" data-type="INT" unit="" value="2" default-value="" min="0" max="0" data-index="0" step="0.001"/></dataset><dataset name="动作信息" id="dsTripInfo" data-type="dsTripInfo" rw-attr=""><data name="分相差动动作" id="分相差动动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="A相差动电流" id="A相差动电流" data-type="" value="0.000000"/><value name="B相差动电流" id="B相差动电流" data-type="" value="0.000000"/><value name="C相差动电流" id="C相差动电流" data-type="" value="0.000000"/><value name="分相差动动作$t" id="分相差动动作$t" data-type="" value=""/></data><data name="零序差动动作" id="零序差动动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="差动电流" id="差动电流" data-type="" value="0.000000"/><value name="制动电流" id="制动电流" data-type="" value="0.000000"/><value name="零序差动动作$t" id="零序差动动作$t" data-type="" value=""/></data><data name="纵联差动保护动作" id="纵联差动保护动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="纵联差动保护动作$t" id="纵联差动保护动作$t" data-type="" value=""/></data><data name="差动手合动作" id="差动手合动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="A相差动电流" id="A相差动电流" data-type="" value="0.000000"/><value name="B相差动电流" id="B相差动电流" data-type="" value="0.000000"/><value name="C相差动电流" id="C相差动电流" data-type="" value="0.000000"/><value name="差动手合动作$t" id="差动手合动作$t" data-type="" value=""/></data><data name="远方跳闸动作" id="远方跳闸动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="远方跳闸动作$t" id="远方跳闸动作$t" data-type="" value=""/></data><data name="差动弱馈启动" id="差动弱馈启动" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="差动弱馈启动$t" id="差动弱馈启动$t" data-type="" value=""/></data><data name="差动远方召唤启动" id="差动远方召唤启动" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="差动远方召唤启动$t" id="差动远方召唤启动$t" data-type="" value=""/></data><data name="采样失步" id="采样失步" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="采样失步$t" id="采样失步$t" data-type="" value=""/></data><data name="采样已同步" id="采样已同步" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="采样已同步$t" id="采样已同步$t" data-type="" value=""/></data><data name="三相差动电流" id="三相差动电流" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="A相差动电流" id="A相差动电流" data-type="" value="0.000000"/><value name="B相差动电流" id="B相差动电流" data-type="" value="0.000000"/><value name="C相差动电流" id="C相差动电流" data-type="" value="0.000000"/><value name="三相差动电流$t" id="三相差动电流$t" data-type="" value=""/></data><data name="三相制动电流" id="三相制动电流" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="A相制动电流" id="A相制动电流" data-type="" value="0.000000"/><value name="B相制动电流" id="B相制动电流" data-type="" value="0.000000"/><value name="C相制动电流" id="C相制动电流" data-type="" value="0.000000"/><value name="三相制动电流$t" id="三相制动电流$t" data-type="" value=""/></data><data name="远方跳闸开入" id="远方跳闸开入" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="远方跳闸开入$t" id="远方跳闸开入$t" data-type="" value=""/></data><data name="对侧差动动作" id="对侧差动动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="对侧差动动作$t" id="对侧差动动作$t" data-type="" value=""/></data><data name="加速联跳动作" id="加速联跳动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="加速联跳动作$t" id="加速联跳动作$t" data-type="" value=""/></data><data name="距离Ⅱ段加速动作" id="距离Ⅱ段加速动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="距离Ⅱ段加速动作$t" id="距离Ⅱ段加速动作$t" data-type="" value=""/></data><data name="距离Ⅲ段加速动作" id="距离Ⅲ段加速动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="距离Ⅲ段加速动作$t" id="距离Ⅲ段加速动作$t" data-type="" value=""/></data><data name="距离手合加速动作" id="距离手合加速动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="距离手合加速动作$t" id="距离手合加速动作$t" data-type="" value=""/></data><data name="距离相近加速动作" id="距离相近加速动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="距离相近加速动作$t" id="距离相近加速动作$t" data-type="" value=""/></data><data name="故障测距" id="故障测距" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="L" id="L" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="故障测距$t" id="故障测距$t" data-type="" value=""/></data><data name="测距阻抗" id="测距阻抗" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="测距阻抗$t" id="测距阻抗$t" data-type="" value=""/></data><data name="距离加速动作" id="距离加速动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="距离加速动作$t" id="距离加速动作$t" data-type="" value=""/></data><data name="接地距离Ⅰ段动作" id="接地距离Ⅰ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="接地距离Ⅰ段动作$t" id="接地距离Ⅰ段动作$t" data-type="" value=""/></data><data name="接地距离Ⅱ段动作" id="接地距离Ⅱ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="接地距离Ⅱ段动作$t" id="接地距离Ⅱ段动作$t" data-type="" value=""/></data><data name="接地距离Ⅲ段动作" id="接地距离Ⅲ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="接地距离Ⅲ段动作$t" id="接地距离Ⅲ段动作$t" data-type="" value=""/></data><data name="相间距离Ⅰ段动作" id="相间距离Ⅰ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="相间距离Ⅰ段动作$t" id="相间距离Ⅰ段动作$t" data-type="" value=""/></data><data name="相间距离Ⅱ段动作" id="相间距离Ⅱ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="相间距离Ⅱ段动作$t" id="相间距离Ⅱ段动作$t" data-type="" value=""/></data><data name="相间距离Ⅲ段动作" id="相间距离Ⅲ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="X" id="X" data-type="" value="0.000000"/><value name="R" id="R" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="相间距离Ⅲ段动作$t" id="相间距离Ⅲ段动作$t" data-type="" value=""/></data><data name="保护启动" id="保护启动" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护启动$t" id="保护启动$t" data-type="" value=""/></data><data name="阻抗元件启动" id="阻抗元件启动" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="阻抗元件启动$t" id="阻抗元件启动$t" data-type="" value=""/></data><data name="零序辅助启动" id="零序辅助启动" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="零序辅助启动$t" id="零序辅助启动$t" data-type="" value=""/></data><data name="静稳失稳启动" id="静稳失稳启动" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="静稳失稳启动$t" id="静稳失稳启动$t" data-type="" value=""/></data><data name="三跳失败" id="三跳失败" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="三跳失败$t" id="三跳失败$t" data-type="" value=""/></data><data name="故障相电压" id="故障相电压" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="UA" id="UA" data-type="" value="0.000000"/><value name="UB" id="UB" data-type="" value="0.000000"/><value name="UC" id="UC" data-type="" value="0.000000"/><value name="故障相电压$t" id="故障相电压$t" data-type="" value=""/></data><data name="故障相电流" id="故障相电流" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="IA" id="IA" data-type="" value="0.000000"/><value name="IB" id="IB" data-type="" value="0.000000"/><value name="IC" id="IC" data-type="" value="0.000000"/><value name="3I0" id="3I0" data-type="" value="0.000000"/><value name="故障相电流$t" id="故障相电流$t" data-type="" value=""/></data><data name="南网传动动作" id="南网传动动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="南网传动动作$t" id="南网传动动作$t" data-type="" value=""/></data><data name="零序过流Ⅰ段动作" id="零序过流Ⅰ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="3I0" id="3I0" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="零序过流Ⅰ段动作$t" id="零序过流Ⅰ段动作$t" data-type="" value=""/></data><data name="零序过流Ⅱ段动作" id="零序过流Ⅱ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="3I0" id="3I0" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="零序过流Ⅱ段动作$t" id="零序过流Ⅱ段动作$t" data-type="" value=""/></data><data name="零序过流Ⅲ段动作" id="零序过流Ⅲ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="3I0" id="3I0" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="零序过流Ⅲ段动作$t" id="零序过流Ⅲ段动作$t" data-type="" value=""/></data><data name="零序过流Ⅳ段动作" id="零序过流Ⅳ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="3I0" id="3I0" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="零序过流Ⅳ段动作$t" id="零序过流Ⅳ段动作$t" data-type="" value=""/></data><data name="零序手合加速动作" id="零序手合加速动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="3I0" id="3I0" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="零序手合加速动作$t" id="零序手合加速动作$t" data-type="" value=""/></data><data name="零序过流加速动作" id="零序过流加速动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="3I0" id="3I0" data-type="" value="0.000000"/><value name="故障相别" id="故障相别" data-type="" value="0.000000"/><value name="零序过流加速动作$t" id="零序过流加速动作$t" data-type="" value=""/></data><data name="PT断线过流Ⅰ段动作" id="PT断线过流Ⅰ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="IA" id="IA" data-type="" value="0.000000"/><value name="IB" id="IB" data-type="" value="0.000000"/><value name="IC" id="IC" data-type="" value="0.000000"/><value name="PT断线过流Ⅰ段动作$t" id="PT断线过流Ⅰ段动作$t" data-type="" value=""/></data><data name="PT断线过流Ⅱ段动作" id="PT断线过流Ⅱ段动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="IA" id="IA" data-type="" value="0.000000"/><value name="IB" id="IB" data-type="" value="0.000000"/><value name="IC" id="IC" data-type="" value="0.000000"/><value name="PT断线过流Ⅱ段动作$t" id="PT断线过流Ⅱ段动作$t" data-type="" value=""/></data><data name="重合闸动作" id="重合闸动作" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="重合闸动作$t" id="重合闸动作$t" data-type="" value=""/></data><data name="三跳启动重合" id="三跳启动重合" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="三跳启动重合$t" id="三跳启动重合$t" data-type="" value=""/></data><data name="TWJ启动重合闸" id="TWJ启动重合闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="TWJ启动重合闸$t" id="TWJ启动重合闸$t" data-type="" value=""/></data><data name="三跳闭锁重合闸" id="三跳闭锁重合闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="三跳闭锁重合闸$t" id="三跳闭锁重合闸$t" data-type="" value=""/></data><data name="同期相别改变" id="同期相别改变" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="同期相别" id="同期相别" data-type="" value="0.000000"/><value name="同期相别改变$t" id="同期相别改变$t" data-type="" value=""/></data><data name="闭锁重合闸" id="闭锁重合闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="闭锁重合闸$t" id="闭锁重合闸$t" data-type="" value=""/></data><data name="压力低闭锁重合闸" id="压力低闭锁重合闸" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="压力低闭锁重合闸$t" id="压力低闭锁重合闸$t" data-type="" value=""/></data><data name="闭锁重合闸开入" id="闭锁重合闸开入" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="闭锁重合闸开入$t" id="闭锁重合闸开入$t" data-type="" value=""/></data><data name="备用1" id="备用1" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="备用1$t" id="备用1$t" data-type="" value=""/></data><data name="备用2" id="备用2" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="备用2$t" id="备用2$t" data-type="" value=""/></data><data name="备用3" id="备用3" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="备用3$t" id="备用3$t" data-type="" value=""/></data><data name="备用4" id="备用4" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="备用4$t" id="备用4$t" data-type="" value=""/></data><data name="备用5" id="备用5" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="备用5$t" id="备用5$t" data-type="" value=""/></data><data name="备用6" id="备用6" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="备用6$t" id="备用6$t" data-type="" value=""/></data><data name="备用7" id="备用7" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="备用7$t" id="备用7$t" data-type="" value=""/></data><data name="备用8" id="备用8" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="备用8$t" id="备用8$t" data-type="" value=""/></data><data name="备用9" id="备用9" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="备用9$t" id="备用9$t" data-type="" value=""/></data><data name="重合闸未重合" id="重合闸未重合" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="重合闸未重合$t" id="重合闸未重合$t" data-type="" value=""/></data><data name="重合闸不成功" id="重合闸不成功" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="重合闸不成功$t" id="重合闸不成功$t" data-type="" value=""/></data><data name="重合闸成功" id="重合闸成功" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="重合闸成功$t" id="重合闸成功$t" data-type="" value=""/></data></dataset><dataset name="MASTER设置项" id="dsmasterset" data-type="dsmasterset" rw-attr=""><data name="IED名称" id="IED名称" data-type="" unit="" value="0 0 0 0 " default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="厂站名称" id="厂站名称" data-type="" unit="" value="0 0 0 0 " default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="时钟同步管理功能" id="时钟同步管理功能" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="61850使能投退" id="61850使能投退" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="系统调试" id="系统调试" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="定值步长判定功能" id="定值步长判定功能" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="检修状态下录波" id="检修状态下录波" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="CCD检查标识" id="CCD检查标识" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="主动打印投退" id="主动打印投退" data-type="" unit="" value="0" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="解析定值文件使能" id="解析定值文件使能" data-type="" unit="" value="0 0 0 0 " default-value="" min="0" max="0" data-index="0" step="0.001"/></dataset></ldevice><ldevice name="CPU1" id="CPU1" index="0"><dataset name="模入量" id="dsRelayAin" data-type="dsRelayAin" rw-attr=""><data name="保护电流A相" id="保护电流A相" data-type="" unit="" value="0.000252" default-value="0.000252" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电流A相$cVal$ang$f" id="Abs_保护电流A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电流A相$cVal$mag$f" id="Rel_保护电流A相$cVal$mag$f" data-type="" value="0.000252"/><value name="Abs_保护电流A相$cVal$mag$f" id="Abs_保护电流A相$cVal$mag$f" data-type="" value="0.000252"/><value name="保护电流A相$cVal$mag$f" id="保护电流A相$cVal$mag$f" data-type="" value="0.000252"/><value name="保护电流A相$cVal$ang$f" id="保护电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电流B相" id="保护电流B相" data-type="" unit="" value="0.000313" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电流B相$cVal$ang$f" id="Abs_保护电流B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电流B相$cVal$mag$f" id="Rel_保护电流B相$cVal$mag$f" data-type="" value="0.000313"/><value name="Abs_保护电流B相$cVal$mag$f" id="Abs_保护电流B相$cVal$mag$f" data-type="" value="0.000313"/><value name="保护电流B相$cVal$mag$f" id="保护电流B相$cVal$mag$f" data-type="" value="0.000313"/><value name="保护电流B相$cVal$ang$f" id="保护电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电流C相" id="保护电流C相" data-type="" unit="" value="0.000311" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电流C相$cVal$ang$f" id="Abs_保护电流C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电流C相$cVal$mag$f" id="Rel_保护电流C相$cVal$mag$f" data-type="" value="0.000311"/><value name="Abs_保护电流C相$cVal$mag$f" id="Abs_保护电流C相$cVal$mag$f" data-type="" value="0.000311"/><value name="保护电流C相$cVal$mag$f" id="保护电流C相$cVal$mag$f" data-type="" value="0.000311"/><value name="保护电流C相$cVal$ang$f" id="保护电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护零序电流" id="保护零序电流" data-type="" unit="" value="0.000124" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护零序电流$cVal$ang$f" id="Abs_保护零序电流$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护零序电流$cVal$mag$f" id="Rel_保护零序电流$cVal$mag$f" data-type="" value="0.000124"/><value name="Abs_保护零序电流$cVal$mag$f" id="Abs_保护零序电流$cVal$mag$f" data-type="" value="0.000124"/><value name="保护零序电流$cVal$mag$f" id="保护零序电流$cVal$mag$f" data-type="" value="0.000124"/><value name="保护零序电流$cVal$ang$f" id="保护零序电流$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压A相" id="保护电压A相" data-type="" unit="" value="0.007379" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电压A相$cVal$ang$f" id="Abs_保护电压A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电压A相$cVal$mag$f" id="Rel_保护电压A相$cVal$mag$f" data-type="" value="0.007379"/><value name="Abs_保护电压A相$cVal$mag$f" id="Abs_保护电压A相$cVal$mag$f" data-type="" value="0.007379"/><value name="保护电压A相$cVal$mag$f" id="保护电压A相$cVal$mag$f" data-type="" value="0.007379"/><value name="保护电压A相$cVal$ang$f" id="保护电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压B相" id="保护电压B相" data-type="" unit="" value="0.002476" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电压B相$cVal$ang$f" id="Abs_保护电压B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电压B相$cVal$mag$f" id="Rel_保护电压B相$cVal$mag$f" data-type="" value="0.002476"/><value name="Abs_保护电压B相$cVal$mag$f" id="Abs_保护电压B相$cVal$mag$f" data-type="" value="0.002476"/><value name="保护电压B相$cVal$mag$f" id="保护电压B相$cVal$mag$f" data-type="" value="0.002476"/><value name="保护电压B相$cVal$ang$f" id="保护电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压C相" id="保护电压C相" data-type="" unit="" value="0.001546" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电压C相$cVal$ang$f" id="Abs_保护电压C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电压C相$cVal$mag$f" id="Rel_保护电压C相$cVal$mag$f" data-type="" value="0.001546"/><value name="Abs_保护电压C相$cVal$mag$f" id="Abs_保护电压C相$cVal$mag$f" data-type="" value="0.001546"/><value name="保护电压C相$cVal$mag$f" id="保护电压C相$cVal$mag$f" data-type="" value="0.001546"/><value name="保护电压C相$cVal$ang$f" id="保护电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护零序电压" id="保护零序电压" data-type="" unit="" value="0.007487" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护零序电压$cVal$ang$f" id="Abs_保护零序电压$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护零序电压$cVal$mag$f" id="Rel_保护零序电压$cVal$mag$f" data-type="" value="0.007487"/><value name="Abs_保护零序电压$cVal$mag$f" id="Abs_保护零序电压$cVal$mag$f" data-type="" value="0.007487"/><value name="保护零序电压$cVal$mag$f" id="保护零序电压$cVal$mag$f" data-type="" value="0.007487"/><value name="保护零序电压$cVal$ang$f" id="保护零序电压$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护同期电压" id="保护同期电压" data-type="" unit="" value="0.007318" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护同期电压$cVal$ang$f" id="Abs_保护同期电压$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护同期电压$cVal$mag$f" id="Rel_保护同期电压$cVal$mag$f" data-type="" value="0.007318"/><value name="Abs_保护同期电压$cVal$mag$f" id="Abs_保护同期电压$cVal$mag$f" data-type="" value="0.007318"/><value name="保护同期电压$cVal$mag$f" id="保护同期电压$cVal$mag$f" data-type="" value="0.007318"/><value name="保护同期电压$cVal$ang$f" id="保护同期电压$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流A相" id="保护冗余电流A相" data-type="" unit="" value="0.000082" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电流A相$cVal$ang$f" id="Abs_保护冗余电流A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电流A相$cVal$mag$f" id="Rel_保护冗余电流A相$cVal$mag$f" data-type="" value="0.000082"/><value name="Abs_保护冗余电流A相$cVal$mag$f" id="Abs_保护冗余电流A相$cVal$mag$f" data-type="" value="0.000082"/><value name="保护冗余电流A相$cVal$mag$f" id="保护冗余电流A相$cVal$mag$f" data-type="" value="0.000082"/><value name="保护冗余电流A相$cVal$ang$f" id="保护冗余电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流B相" id="保护冗余电流B相" data-type="" unit="" value="0.000034" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电流B相$cVal$ang$f" id="Abs_保护冗余电流B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电流B相$cVal$mag$f" id="Rel_保护冗余电流B相$cVal$mag$f" data-type="" value="0.000034"/><value name="Abs_保护冗余电流B相$cVal$mag$f" id="Abs_保护冗余电流B相$cVal$mag$f" data-type="" value="0.000034"/><value name="保护冗余电流B相$cVal$mag$f" id="保护冗余电流B相$cVal$mag$f" data-type="" value="0.000034"/><value name="保护冗余电流B相$cVal$ang$f" id="保护冗余电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流C相" id="保护冗余电流C相" data-type="" unit="" value="0.000364" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电流C相$cVal$ang$f" id="Abs_保护冗余电流C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电流C相$cVal$mag$f" id="Rel_保护冗余电流C相$cVal$mag$f" data-type="" value="0.000364"/><value name="Abs_保护冗余电流C相$cVal$mag$f" id="Abs_保护冗余电流C相$cVal$mag$f" data-type="" value="0.000364"/><value name="保护冗余电流C相$cVal$mag$f" id="保护冗余电流C相$cVal$mag$f" data-type="" value="0.000364"/><value name="保护冗余电流C相$cVal$ang$f" id="保护冗余电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余零序电流" id="保护冗余零序电流" data-type="" unit="" value="0.000292" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余零序电流$cVal$ang$f" id="Abs_保护冗余零序电流$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余零序电流$cVal$mag$f" id="Rel_保护冗余零序电流$cVal$mag$f" data-type="" value="0.000292"/><value name="Abs_保护冗余零序电流$cVal$mag$f" id="Abs_保护冗余零序电流$cVal$mag$f" data-type="" value="0.000292"/><value name="保护冗余零序电流$cVal$mag$f" id="保护冗余零序电流$cVal$mag$f" data-type="" value="0.000292"/><value name="保护冗余零序电流$cVal$ang$f" id="保护冗余零序电流$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压A相" id="保护冗余电压A相" data-type="" unit="" value="0.008644" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电压A相$cVal$ang$f" id="Abs_保护冗余电压A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电压A相$cVal$mag$f" id="Rel_保护冗余电压A相$cVal$mag$f" data-type="" value="0.008644"/><value name="Abs_保护冗余电压A相$cVal$mag$f" id="Abs_保护冗余电压A相$cVal$mag$f" data-type="" value="0.008644"/><value name="保护冗余电压A相$cVal$mag$f" id="保护冗余电压A相$cVal$mag$f" data-type="" value="0.008644"/><value name="保护冗余电压A相$cVal$ang$f" id="保护冗余电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压B相" id="保护冗余电压B相" data-type="" unit="" value="0.003940" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电压B相$cVal$ang$f" id="Abs_保护冗余电压B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电压B相$cVal$mag$f" id="Rel_保护冗余电压B相$cVal$mag$f" data-type="" value="0.003940"/><value name="Abs_保护冗余电压B相$cVal$mag$f" id="Abs_保护冗余电压B相$cVal$mag$f" data-type="" value="0.003940"/><value name="保护冗余电压B相$cVal$mag$f" id="保护冗余电压B相$cVal$mag$f" data-type="" value="0.003940"/><value name="保护冗余电压B相$cVal$ang$f" id="保护冗余电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压C相" id="保护冗余电压C相" data-type="" unit="" value="0.001719" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电压C相$cVal$ang$f" id="Abs_保护冗余电压C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电压C相$cVal$mag$f" id="Rel_保护冗余电压C相$cVal$mag$f" data-type="" value="0.001719"/><value name="Abs_保护冗余电压C相$cVal$mag$f" id="Abs_保护冗余电压C相$cVal$mag$f" data-type="" value="0.001719"/><value name="保护冗余电压C相$cVal$mag$f" id="保护冗余电压C相$cVal$mag$f" data-type="" value="0.001719"/><value name="保护冗余电压C相$cVal$ang$f" id="保护冗余电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余同期电压" id="保护冗余同期电压" data-type="" unit="" value="0.007162" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余同期电压$cVal$ang$f" id="Abs_保护冗余同期电压$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余同期电压$cVal$mag$f" id="Rel_保护冗余同期电压$cVal$mag$f" data-type="" value="0.007162"/><value name="Abs_保护冗余同期电压$cVal$mag$f" id="Abs_保护冗余同期电压$cVal$mag$f" data-type="" value="0.007162"/><value name="保护冗余同期电压$cVal$mag$f" id="保护冗余同期电压$cVal$mag$f" data-type="" value="0.007162"/><value name="保护冗余同期电压$cVal$ang$f" id="保护冗余同期电压$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电流A相" id="对侧保护电流A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电流A相$cVal$ang$f" id="Abs_对侧保护电流A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电流A相$cVal$mag$f" id="Rel_对侧保护电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电流A相$cVal$mag$f" id="Abs_对侧保护电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流A相$cVal$mag$f" id="对侧保护电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流A相$cVal$ang$f" id="对侧保护电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电流B相" id="对侧保护电流B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电流B相$cVal$ang$f" id="Abs_对侧保护电流B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电流B相$cVal$mag$f" id="Rel_对侧保护电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电流B相$cVal$mag$f" id="Abs_对侧保护电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流B相$cVal$mag$f" id="对侧保护电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流B相$cVal$ang$f" id="对侧保护电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电流C相" id="对侧保护电流C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电流C相$cVal$ang$f" id="Abs_对侧保护电流C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电流C相$cVal$mag$f" id="Rel_对侧保护电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电流C相$cVal$mag$f" id="Abs_对侧保护电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流C相$cVal$mag$f" id="对侧保护电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流C相$cVal$ang$f" id="对侧保护电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电压A相" id="对侧保护电压A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电压A相$cVal$ang$f" id="Abs_对侧保护电压A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电压A相$cVal$mag$f" id="Rel_对侧保护电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电压A相$cVal$mag$f" id="Abs_对侧保护电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压A相$cVal$mag$f" id="对侧保护电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压A相$cVal$ang$f" id="对侧保护电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电压B相" id="对侧保护电压B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电压B相$cVal$ang$f" id="Abs_对侧保护电压B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电压B相$cVal$mag$f" id="Rel_对侧保护电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电压B相$cVal$mag$f" id="Abs_对侧保护电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压B相$cVal$mag$f" id="对侧保护电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压B相$cVal$ang$f" id="对侧保护电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电压C相" id="对侧保护电压C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电压C相$cVal$ang$f" id="Abs_对侧保护电压C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电压C相$cVal$mag$f" id="Rel_对侧保护电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电压C相$cVal$mag$f" id="Abs_对侧保护电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压C相$cVal$mag$f" id="对侧保护电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压C相$cVal$ang$f" id="对侧保护电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="差动电流A相" id="差动电流A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_差动电流A相$cVal$ang$f" id="Abs_差动电流A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_差动电流A相$cVal$mag$f" id="Rel_差动电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_差动电流A相$cVal$mag$f" id="Abs_差动电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流A相$cVal$mag$f" id="差动电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流A相$cVal$ang$f" id="差动电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="差动电流B相" id="差动电流B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_差动电流B相$cVal$ang$f" id="Abs_差动电流B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_差动电流B相$cVal$mag$f" id="Rel_差动电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_差动电流B相$cVal$mag$f" id="Abs_差动电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流B相$cVal$mag$f" id="差动电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流B相$cVal$ang$f" id="差动电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="差动电流C相" id="差动电流C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_差动电流C相$cVal$ang$f" id="Abs_差动电流C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_差动电流C相$cVal$mag$f" id="Rel_差动电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_差动电流C相$cVal$mag$f" id="Abs_差动电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流C相$cVal$mag$f" id="差动电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流C相$cVal$ang$f" id="差动电流C相$cVal$ang$f" data-type="" value="0.000000"/></data></dataset><dataset name="调校通道" id="dsRelayAiForScale" data-type="dsRelayAiForScale" rw-attr=""><data name="保护电流A相" id="保护电流A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电流A相$cVal$mag$f" id="保护电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电流A相$cVal$ang$f" id="保护电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电流B相" id="保护电流B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电流B相$cVal$mag$f" id="保护电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电流B相$cVal$ang$f" id="保护电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电流C相" id="保护电流C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电流C相$cVal$mag$f" id="保护电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电流C相$cVal$ang$f" id="保护电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护零序电流" id="保护零序电流" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护零序电流$cVal$mag$f" id="保护零序电流$cVal$mag$f" data-type="" value="0.000000"/><value name="保护零序电流$cVal$ang$f" id="保护零序电流$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压A相" id="保护电压A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电压A相$cVal$mag$f" id="保护电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电压A相$cVal$ang$f" id="保护电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压B相" id="保护电压B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电压B相$cVal$mag$f" id="保护电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电压B相$cVal$ang$f" id="保护电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压C相" id="保护电压C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电压C相$cVal$mag$f" id="保护电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电压C相$cVal$ang$f" id="保护电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护同期电压" id="保护同期电压" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护同期电压$cVal$mag$f" id="保护同期电压$cVal$mag$f" data-type="" value="0.000000"/><value name="保护同期电压$cVal$ang$f" id="保护同期电压$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流A相" id="保护冗余电流A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电流A相$cVal$mag$f" id="保护冗余电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电流A相$cVal$ang$f" id="保护冗余电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流B相" id="保护冗余电流B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电流B相$cVal$mag$f" id="保护冗余电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电流B相$cVal$ang$f" id="保护冗余电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流C相" id="保护冗余电流C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电流C相$cVal$mag$f" id="保护冗余电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电流C相$cVal$ang$f" id="保护冗余电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余零序电流" id="保护冗余零序电流" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余零序电流$cVal$mag$f" id="保护冗余零序电流$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余零序电流$cVal$ang$f" id="保护冗余零序电流$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压A相" id="保护冗余电压A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电压A相$cVal$mag$f" id="保护冗余电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电压A相$cVal$ang$f" id="保护冗余电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压B相" id="保护冗余电压B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电压B相$cVal$mag$f" id="保护冗余电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电压B相$cVal$ang$f" id="保护冗余电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压C相" id="保护冗余电压C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电压C相$cVal$mag$f" id="保护冗余电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电压C相$cVal$ang$f" id="保护冗余电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余同期电压" id="保护冗余同期电压" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余同期电压$cVal$mag$f" id="保护冗余同期电压$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余同期电压$cVal$ang$f" id="保护冗余同期电压$cVal$ang$f" data-type="" value="0.000000"/></data></dataset></ldevice><ldevice name="CPU2" id="CPU2" index="0"><dataset name="模入量" id="dsRelayAin" data-type="dsRelayAin" rw-attr=""><data name="保护电流A相" id="保护电流A相" data-type="" unit="" value="0.000087" default-value="0.000087" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电流A相$cVal$ang$f" id="Abs_保护电流A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电流A相$cVal$mag$f" id="Rel_保护电流A相$cVal$mag$f" data-type="" value="0.000087"/><value name="Abs_保护电流A相$cVal$mag$f" id="Abs_保护电流A相$cVal$mag$f" data-type="" value="0.000087"/><value name="保护电流A相$cVal$mag$f" id="保护电流A相$cVal$mag$f" data-type="" value="0.000087"/><value name="保护电流A相$cVal$ang$f" id="保护电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电流B相" id="保护电流B相" data-type="" unit="" value="0.000150" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电流B相$cVal$ang$f" id="Abs_保护电流B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电流B相$cVal$mag$f" id="Rel_保护电流B相$cVal$mag$f" data-type="" value="0.000150"/><value name="Abs_保护电流B相$cVal$mag$f" id="Abs_保护电流B相$cVal$mag$f" data-type="" value="0.000150"/><value name="保护电流B相$cVal$mag$f" id="保护电流B相$cVal$mag$f" data-type="" value="0.000150"/><value name="保护电流B相$cVal$ang$f" id="保护电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电流C相" id="保护电流C相" data-type="" unit="" value="0.000300" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电流C相$cVal$ang$f" id="Abs_保护电流C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电流C相$cVal$mag$f" id="Rel_保护电流C相$cVal$mag$f" data-type="" value="0.000300"/><value name="Abs_保护电流C相$cVal$mag$f" id="Abs_保护电流C相$cVal$mag$f" data-type="" value="0.000300"/><value name="保护电流C相$cVal$mag$f" id="保护电流C相$cVal$mag$f" data-type="" value="0.000300"/><value name="保护电流C相$cVal$ang$f" id="保护电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护零序电流" id="保护零序电流" data-type="" unit="" value="0.000158" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护零序电流$cVal$ang$f" id="Abs_保护零序电流$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护零序电流$cVal$mag$f" id="Rel_保护零序电流$cVal$mag$f" data-type="" value="0.000158"/><value name="Abs_保护零序电流$cVal$mag$f" id="Abs_保护零序电流$cVal$mag$f" data-type="" value="0.000158"/><value name="保护零序电流$cVal$mag$f" id="保护零序电流$cVal$mag$f" data-type="" value="0.000158"/><value name="保护零序电流$cVal$ang$f" id="保护零序电流$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压A相" id="保护电压A相" data-type="" unit="" value="0.007613" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电压A相$cVal$ang$f" id="Abs_保护电压A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电压A相$cVal$mag$f" id="Rel_保护电压A相$cVal$mag$f" data-type="" value="0.007613"/><value name="Abs_保护电压A相$cVal$mag$f" id="Abs_保护电压A相$cVal$mag$f" data-type="" value="0.007613"/><value name="保护电压A相$cVal$mag$f" id="保护电压A相$cVal$mag$f" data-type="" value="0.007613"/><value name="保护电压A相$cVal$ang$f" id="保护电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压B相" id="保护电压B相" data-type="" unit="" value="0.004361" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电压B相$cVal$ang$f" id="Abs_保护电压B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电压B相$cVal$mag$f" id="Rel_保护电压B相$cVal$mag$f" data-type="" value="0.004361"/><value name="Abs_保护电压B相$cVal$mag$f" id="Abs_保护电压B相$cVal$mag$f" data-type="" value="0.004361"/><value name="保护电压B相$cVal$mag$f" id="保护电压B相$cVal$mag$f" data-type="" value="0.004361"/><value name="保护电压B相$cVal$ang$f" id="保护电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压C相" id="保护电压C相" data-type="" unit="" value="0.001130" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护电压C相$cVal$ang$f" id="Abs_保护电压C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护电压C相$cVal$mag$f" id="Rel_保护电压C相$cVal$mag$f" data-type="" value="0.001130"/><value name="Abs_保护电压C相$cVal$mag$f" id="Abs_保护电压C相$cVal$mag$f" data-type="" value="0.001130"/><value name="保护电压C相$cVal$mag$f" id="保护电压C相$cVal$mag$f" data-type="" value="0.001130"/><value name="保护电压C相$cVal$ang$f" id="保护电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护零序电压" id="保护零序电压" data-type="" unit="" value="0.006741" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护零序电压$cVal$ang$f" id="Abs_保护零序电压$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护零序电压$cVal$mag$f" id="Rel_保护零序电压$cVal$mag$f" data-type="" value="0.006741"/><value name="Abs_保护零序电压$cVal$mag$f" id="Abs_保护零序电压$cVal$mag$f" data-type="" value="0.006741"/><value name="保护零序电压$cVal$mag$f" id="保护零序电压$cVal$mag$f" data-type="" value="0.006741"/><value name="保护零序电压$cVal$ang$f" id="保护零序电压$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护同期电压" id="保护同期电压" data-type="" unit="" value="0.008409" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护同期电压$cVal$ang$f" id="Abs_保护同期电压$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护同期电压$cVal$mag$f" id="Rel_保护同期电压$cVal$mag$f" data-type="" value="0.008409"/><value name="Abs_保护同期电压$cVal$mag$f" id="Abs_保护同期电压$cVal$mag$f" data-type="" value="0.008409"/><value name="保护同期电压$cVal$mag$f" id="保护同期电压$cVal$mag$f" data-type="" value="0.008409"/><value name="保护同期电压$cVal$ang$f" id="保护同期电压$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流A相" id="保护冗余电流A相" data-type="" unit="" value="0.000060" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电流A相$cVal$ang$f" id="Abs_保护冗余电流A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电流A相$cVal$mag$f" id="Rel_保护冗余电流A相$cVal$mag$f" data-type="" value="0.000060"/><value name="Abs_保护冗余电流A相$cVal$mag$f" id="Abs_保护冗余电流A相$cVal$mag$f" data-type="" value="0.000060"/><value name="保护冗余电流A相$cVal$mag$f" id="保护冗余电流A相$cVal$mag$f" data-type="" value="0.000060"/><value name="保护冗余电流A相$cVal$ang$f" id="保护冗余电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流B相" id="保护冗余电流B相" data-type="" unit="" value="0.000314" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电流B相$cVal$ang$f" id="Abs_保护冗余电流B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电流B相$cVal$mag$f" id="Rel_保护冗余电流B相$cVal$mag$f" data-type="" value="0.000314"/><value name="Abs_保护冗余电流B相$cVal$mag$f" id="Abs_保护冗余电流B相$cVal$mag$f" data-type="" value="0.000314"/><value name="保护冗余电流B相$cVal$mag$f" id="保护冗余电流B相$cVal$mag$f" data-type="" value="0.000314"/><value name="保护冗余电流B相$cVal$ang$f" id="保护冗余电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流C相" id="保护冗余电流C相" data-type="" unit="" value="0.000105" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电流C相$cVal$ang$f" id="Abs_保护冗余电流C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电流C相$cVal$mag$f" id="Rel_保护冗余电流C相$cVal$mag$f" data-type="" value="0.000105"/><value name="Abs_保护冗余电流C相$cVal$mag$f" id="Abs_保护冗余电流C相$cVal$mag$f" data-type="" value="0.000105"/><value name="保护冗余电流C相$cVal$mag$f" id="保护冗余电流C相$cVal$mag$f" data-type="" value="0.000105"/><value name="保护冗余电流C相$cVal$ang$f" id="保护冗余电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余零序电流" id="保护冗余零序电流" data-type="" unit="" value="0.000136" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余零序电流$cVal$ang$f" id="Abs_保护冗余零序电流$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余零序电流$cVal$mag$f" id="Rel_保护冗余零序电流$cVal$mag$f" data-type="" value="0.000136"/><value name="Abs_保护冗余零序电流$cVal$mag$f" id="Abs_保护冗余零序电流$cVal$mag$f" data-type="" value="0.000136"/><value name="保护冗余零序电流$cVal$mag$f" id="保护冗余零序电流$cVal$mag$f" data-type="" value="0.000136"/><value name="保护冗余零序电流$cVal$ang$f" id="保护冗余零序电流$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压A相" id="保护冗余电压A相" data-type="" unit="" value="0.009896" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电压A相$cVal$ang$f" id="Abs_保护冗余电压A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电压A相$cVal$mag$f" id="Rel_保护冗余电压A相$cVal$mag$f" data-type="" value="0.009896"/><value name="Abs_保护冗余电压A相$cVal$mag$f" id="Abs_保护冗余电压A相$cVal$mag$f" data-type="" value="0.009896"/><value name="保护冗余电压A相$cVal$mag$f" id="保护冗余电压A相$cVal$mag$f" data-type="" value="0.009896"/><value name="保护冗余电压A相$cVal$ang$f" id="保护冗余电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压B相" id="保护冗余电压B相" data-type="" unit="" value="0.003232" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电压B相$cVal$ang$f" id="Abs_保护冗余电压B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电压B相$cVal$mag$f" id="Rel_保护冗余电压B相$cVal$mag$f" data-type="" value="0.003232"/><value name="Abs_保护冗余电压B相$cVal$mag$f" id="Abs_保护冗余电压B相$cVal$mag$f" data-type="" value="0.003232"/><value name="保护冗余电压B相$cVal$mag$f" id="保护冗余电压B相$cVal$mag$f" data-type="" value="0.003232"/><value name="保护冗余电压B相$cVal$ang$f" id="保护冗余电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压C相" id="保护冗余电压C相" data-type="" unit="" value="0.001764" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余电压C相$cVal$ang$f" id="Abs_保护冗余电压C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余电压C相$cVal$mag$f" id="Rel_保护冗余电压C相$cVal$mag$f" data-type="" value="0.001764"/><value name="Abs_保护冗余电压C相$cVal$mag$f" id="Abs_保护冗余电压C相$cVal$mag$f" data-type="" value="0.001764"/><value name="保护冗余电压C相$cVal$mag$f" id="保护冗余电压C相$cVal$mag$f" data-type="" value="0.001764"/><value name="保护冗余电压C相$cVal$ang$f" id="保护冗余电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余同期电压" id="保护冗余同期电压" data-type="" unit="" value="0.007067" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_保护冗余同期电压$cVal$ang$f" id="Abs_保护冗余同期电压$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_保护冗余同期电压$cVal$mag$f" id="Rel_保护冗余同期电压$cVal$mag$f" data-type="" value="0.007067"/><value name="Abs_保护冗余同期电压$cVal$mag$f" id="Abs_保护冗余同期电压$cVal$mag$f" data-type="" value="0.007067"/><value name="保护冗余同期电压$cVal$mag$f" id="保护冗余同期电压$cVal$mag$f" data-type="" value="0.007067"/><value name="保护冗余同期电压$cVal$ang$f" id="保护冗余同期电压$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电流A相" id="对侧保护电流A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电流A相$cVal$ang$f" id="Abs_对侧保护电流A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电流A相$cVal$mag$f" id="Rel_对侧保护电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电流A相$cVal$mag$f" id="Abs_对侧保护电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流A相$cVal$mag$f" id="对侧保护电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流A相$cVal$ang$f" id="对侧保护电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电流B相" id="对侧保护电流B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电流B相$cVal$ang$f" id="Abs_对侧保护电流B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电流B相$cVal$mag$f" id="Rel_对侧保护电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电流B相$cVal$mag$f" id="Abs_对侧保护电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流B相$cVal$mag$f" id="对侧保护电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流B相$cVal$ang$f" id="对侧保护电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电流C相" id="对侧保护电流C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电流C相$cVal$ang$f" id="Abs_对侧保护电流C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电流C相$cVal$mag$f" id="Rel_对侧保护电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电流C相$cVal$mag$f" id="Abs_对侧保护电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流C相$cVal$mag$f" id="对侧保护电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电流C相$cVal$ang$f" id="对侧保护电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电压A相" id="对侧保护电压A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电压A相$cVal$ang$f" id="Abs_对侧保护电压A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电压A相$cVal$mag$f" id="Rel_对侧保护电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电压A相$cVal$mag$f" id="Abs_对侧保护电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压A相$cVal$mag$f" id="对侧保护电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压A相$cVal$ang$f" id="对侧保护电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电压B相" id="对侧保护电压B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电压B相$cVal$ang$f" id="Abs_对侧保护电压B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电压B相$cVal$mag$f" id="Rel_对侧保护电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电压B相$cVal$mag$f" id="Abs_对侧保护电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压B相$cVal$mag$f" id="对侧保护电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压B相$cVal$ang$f" id="对侧保护电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="对侧保护电压C相" id="对侧保护电压C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_对侧保护电压C相$cVal$ang$f" id="Abs_对侧保护电压C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_对侧保护电压C相$cVal$mag$f" id="Rel_对侧保护电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_对侧保护电压C相$cVal$mag$f" id="Abs_对侧保护电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压C相$cVal$mag$f" id="对侧保护电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="对侧保护电压C相$cVal$ang$f" id="对侧保护电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="差动电流A相" id="差动电流A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_差动电流A相$cVal$ang$f" id="Abs_差动电流A相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_差动电流A相$cVal$mag$f" id="Rel_差动电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_差动电流A相$cVal$mag$f" id="Abs_差动电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流A相$cVal$mag$f" id="差动电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流A相$cVal$ang$f" id="差动电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="差动电流B相" id="差动电流B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_差动电流B相$cVal$ang$f" id="Abs_差动电流B相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_差动电流B相$cVal$mag$f" id="Rel_差动电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_差动电流B相$cVal$mag$f" id="Abs_差动电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流B相$cVal$mag$f" id="差动电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流B相$cVal$ang$f" id="差动电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="差动电流C相" id="差动电流C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="Abs_差动电流C相$cVal$ang$f" id="Abs_差动电流C相$cVal$ang$f" data-type="" value="0.000000"/><value name="Rel_差动电流C相$cVal$mag$f" id="Rel_差动电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="Abs_差动电流C相$cVal$mag$f" id="Abs_差动电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流C相$cVal$mag$f" id="差动电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="差动电流C相$cVal$ang$f" id="差动电流C相$cVal$ang$f" data-type="" value="0.000000"/></data></dataset><dataset name="调校通道" id="dsRelayAiForScale" data-type="dsRelayAiForScale" rw-attr=""><data name="保护电流A相" id="保护电流A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电流A相$cVal$mag$f" id="保护电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电流A相$cVal$ang$f" id="保护电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电流B相" id="保护电流B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电流B相$cVal$mag$f" id="保护电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电流B相$cVal$ang$f" id="保护电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电流C相" id="保护电流C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电流C相$cVal$mag$f" id="保护电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电流C相$cVal$ang$f" id="保护电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护零序电流" id="保护零序电流" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护零序电流$cVal$mag$f" id="保护零序电流$cVal$mag$f" data-type="" value="0.000000"/><value name="保护零序电流$cVal$ang$f" id="保护零序电流$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压A相" id="保护电压A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电压A相$cVal$mag$f" id="保护电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电压A相$cVal$ang$f" id="保护电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压B相" id="保护电压B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电压B相$cVal$mag$f" id="保护电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电压B相$cVal$ang$f" id="保护电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护电压C相" id="保护电压C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护电压C相$cVal$mag$f" id="保护电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护电压C相$cVal$ang$f" id="保护电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护同期电压" id="保护同期电压" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护同期电压$cVal$mag$f" id="保护同期电压$cVal$mag$f" data-type="" value="0.000000"/><value name="保护同期电压$cVal$ang$f" id="保护同期电压$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流A相" id="保护冗余电流A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电流A相$cVal$mag$f" id="保护冗余电流A相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电流A相$cVal$ang$f" id="保护冗余电流A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流B相" id="保护冗余电流B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电流B相$cVal$mag$f" id="保护冗余电流B相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电流B相$cVal$ang$f" id="保护冗余电流B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电流C相" id="保护冗余电流C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电流C相$cVal$mag$f" id="保护冗余电流C相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电流C相$cVal$ang$f" id="保护冗余电流C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余零序电流" id="保护冗余零序电流" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余零序电流$cVal$mag$f" id="保护冗余零序电流$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余零序电流$cVal$ang$f" id="保护冗余零序电流$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压A相" id="保护冗余电压A相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电压A相$cVal$mag$f" id="保护冗余电压A相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电压A相$cVal$ang$f" id="保护冗余电压A相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压B相" id="保护冗余电压B相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电压B相$cVal$mag$f" id="保护冗余电压B相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电压B相$cVal$ang$f" id="保护冗余电压B相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余电压C相" id="保护冗余电压C相" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余电压C相$cVal$mag$f" id="保护冗余电压C相$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余电压C相$cVal$ang$f" id="保护冗余电压C相$cVal$ang$f" data-type="" value="0.000000"/></data><data name="保护冗余同期电压" id="保护冗余同期电压" data-type="" unit="" value="0.000000" default-value="" min="0" max="0" data-index="0" step="0.001"><value name="保护冗余同期电压$cVal$mag$f" id="保护冗余同期电压$cVal$mag$f" data-type="" value="0.000000"/><value name="保护冗余同期电压$cVal$ang$f" id="保护冗余同期电压$cVal$ang$f" data-type="" value="0.000000"/></data></dataset></ldevice></device-model><sys-paras name="测试参数" id="sys-para" data-type="sys-para" rw-attr=""><data name="第一路使能" id="Group1Enable" data-type="BOOL" unit="" value="1" default-value="1" min="0" max="0" data-index="0" step="0.001"/><data name="通讯前延时" id="g_TComBef" data-type="number" unit="ms" value="200" default-value="200" min="0" max="0" data-index="0" step="0.001"/><data name="通讯后延时" id="g_TComAft" data-type="number" unit="ms" value="3000" default-value="3000" min="0" max="0" data-index="0" step="0.001"/><data name="额定电流" id="g_In" data-type="number" unit="A" value="1" default-value="1" min="0" max="0" data-index="0" step="0.001"/><data name="额定电压" id="g_Un" data-type="number" unit="V" value="100" default-value="100" min="0" max="0" data-index="0" step="0.001"/><data name="读遥测前延时" id="g_TReadYC" data-type="number" unit="ms" value="5000" default-value="5000" min="0" max="0" data-index="0" step="0.001"/><data name="读SOE前延时" id="g_TReadSoe" data-type="number" unit="ms" value="10000" default-value="10000" min="0" max="0" data-index="0" step="0.001"/><data name="模入额定CT值（5A）" id="MR5In" data-type="number" unit="A" value="5" default-value="5" min="0" max="0" data-index="0" step="0.001"/><data name="模入额定CT值" id="MRIn" data-type="number" unit="A" value="0.000000" default-value="0.000000" min="0" max="0" data-index="0" step="0.001"/><data name="零序额定CT值" id="LXIn" data-type="number" unit="A" value="5" default-value="5" min="0" max="0" data-index="0" step="0.001"/><data name="测量额定CT值（5A）" id="CLIn" data-type="number" unit="A" value="5" default-value="5" min="0" max="0" data-index="0" step="0.001"/><data name="测量额定CT值（1A）" id="MRIn2" data-type="number" unit="A" value="1" default-value="1" min="0" max="0" data-index="0" step="0.001"/><data name="电压1V绝对误差" id="g_U1VErrorAbs" data-type="number" unit="V" value="1.0" default-value="1.0" min="0" max="0" data-index="0" step="0.001"/><data name="电流005In相对误差" id="g_I005InErrorRel" data-type="number" unit="" value="0.02" default-value="0.02" min="0" max="0" data-index="0" step="0.001"/><data name="模入电压绝对误差" id="g_MRUErrorAbs" data-type="number" unit="V" value="1.5" default-value="1.5" min="0" max="0" data-index="0" step="0.001"/><data name="模入电压相对误差" id="g_MRUErrorRel" data-type="number" unit="" value="0.025" default-value="0.025" min="0" max="0" data-index="0" step="0.001"/><data name="模入电压角度绝对误差" id="g_MRUAngErrorAbs" data-type="number" unit="°" value="3" default-value="3" min="0" max="0" data-index="0" step="0.001"/><data name="模入电流相对误差" id="g_MRIErrorRel" data-type="number" unit="" value="0.025" default-value="0.025" min="0" max="0" data-index="0" step="0.001"/><data name="模入电流角度绝对误差" id="g_MRIAngErrorAbs" data-type="number" unit="°" value="3" default-value="3" min="0" max="0" data-index="0" step="0.001"/><data name="功率相对误差" id="g_GLErrorRel" data-type="number" unit="" value="0.005" default-value="0.005" min="0" max="0" data-index="0" step="0.001"/><data name="功率因数绝对误差" id="g_CosErrorRel" data-type="number" unit="" value="0.1" default-value="0.1" min="0" max="0" data-index="0" step="0.001"/><data name="读全部开入状态前延时" id="BTReadAllDin" data-type="number" unit="ms" value="500" default-value="500" min="0" max="0" data-index="0" step="0.001"/><data name="读全部开入状态后延时" id="ATReadAllDin" data-type="number" unit="ms" value="1000" default-value="1000" min="0" max="0" data-index="0" step="0.001"/><data name="判断开入状态前延时" id="BTJudgeDin" data-type="number" unit="ms" value="1000" default-value="1000" min="0" max="0" data-index="0" step="0.001"/><data name="判断开入状态后延时" id="ATJudgeDin" data-type="number" unit="ms" value="200" default-value="200" min="0" max="0" data-index="0" step="0.001"/><data name="开出传动通讯后延时" id="ATJudgeDout" data-type="number" unit="ms" value="200" default-value="200" min="0" max="0" data-index="0" step="0.001"/><data name="装置调校延时" id="g_TTXBef" data-type="number" unit="ms" value="8000" default-value="8000" min="0" max="0" data-index="0" step="0.001"/><data name="装置重启前延时" id="Para" data-type="number" unit="ms" value="10000" default-value="10000" min="0" max="0" data-index="0" step="0.001"/><data name="装置二次电流" id="In" data-type="number" unit="A" value="0.000000" default-value="0.000000" min="0" max="0" data-index="0" step="0.001"/><data name="装置唯一编码" id="DevOnlyCode" data-type="string" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="频率绝对误差" id="g_FreqErrorAbs" data-type="number" unit="Hz" value="0.02" default-value="0.02" min="0" max="0" data-index="0" step="0.001"/><data name="直流电压" id="Udc" data-type="number" unit="V" value="" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="IO装置延时" id="IODelay" data-type="number" unit="s" value="5" default-value="5" min="0" max="0" data-index="0" step="0.001"/><data name="通道开出通讯后延时" id="ATJudgeDTDout" data-type="number" unit="ms" value="8000" default-value="8000" min="0" max="0" data-index="0" step="0.001"/><data name="测试参数" id="Para1" data-type="" unit="" value="" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="线性度倍数" id="XXDScale" data-type="number" unit="" value="2.000000" default-value="2.000000" min="0" max="0" data-index="0" step="0.001"/><data name="直流电压提示" id="TipDC" data-type="string" unit="" value="请检查并接入直流电源，电压等级为0伏" default-value="" min="0" max="0" data-index="0" step="0.001"/><data name="读取开入循环次数" id="LoopNum" data-type="number" unit="" value="6.000000" default-value="1.000000" min="0" max="0" data-index="0" step="0.001"/><data name="测量电压绝对误差" id="g_CLUErrorAbs" data-type="number" unit="V" value="0.2" default-value="0.2" min="0" max="0" data-index="0" step="0.001"/><data name="测量电压角度绝对误差" id="g_CLUAngErrorAbs" data-type="number" unit="°" value="3" default-value="3" min="0" max="0" data-index="0" step="0.001"/><data name="测量电流绝对误差" id="g_CLIErrorAbs" data-type="number" unit="A" value="0.01" default-value="0.01" min="0" max="0" data-index="0" step="0.001"/><data name="测量电流角度绝对误差" id="g_CLIAngErrorAbs" data-type="number" unit="°" value="3" default-value="3" min="0" max="0" data-index="0" step="0.001"/><data name="测量电流相对误差" id="g_CLIErrorRel" data-type="number" unit="" value="0.002" default-value="0.002" min="0" max="0" data-index="0" step="0.001"/></sys-paras><characteristics/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><items name="测试前检查" id="Items6" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="rootnode" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><safety name="更新直流电压" id="Safety5" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[local  vUdc=GetGlobal_Long("udc-power");
strDC=string.format("请检查并接入直流电源，电压等级为%d伏", vUdc);
SetTestParaStr("TipDC",strDC);]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""/><standard></standard><dllcall name="" id="" para-type="none" func-name="" result-file=""><![CDATA[]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><safety name="检查端子连片（合格）" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=核对端子：TD：3到4，12到13，13个；JD：1到2，4到5，7到8，8个；1BD：10个；ZD：2到3，7到8，8个；7UD：9到11，12到14，15到17，19到22，23到25，26到28，41到42，42个；7QD：1到2，4到5，8到9，12到13，13个；7YD：1到2，5个；1UD：6个；1ID：5到8，8个；1QD：1到5，13到14，19到22，22个；1CD：1到2，10个；1XD：1到两个2，4到5，10个；1YD：1到两个2，4到5，10个；1LD：1到2，7个；4QD：1到6，13到16，19到20，22到24，26到27，32到35，35个；4CD：1到2，4到7，8个；4PD：1到2，7个；4YD：1到2，4到5，11个；2BD：10个；;ExpectString=是否合格;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><safety name="检查直流电源回路（合格）" id="Safety2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=TipDC;ExpectString=是否合格;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><safety name="投入检修压板" id="Safety4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=投入检修压板;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><safety name="接入对时线（示例）" id="Safety3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=对时接入TD1和2;ExpectString=无;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><items name="模拟量检查" id="Items" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><items name="测试前准备(示例)" id="Items1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><safety name="更新额定值" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local  vAcCurrent=GetGlobal_Long("Ac-Current");

SetTestPara("MRIn",vAcCurrent);

if (vAcCurrent==1) then
	SetTestPara("XXDScale",5);
else
	SetTestPara("XXDScale",2);
end;

]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""/><standard></standard><dllcall name="" id="" para-type="none" func-name="" result-file=""><![CDATA[]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><reports/><macrotest name="选择测试仪" id="MacroTest2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><para macroid="AppSelect" testmode=""><fparas name="" id=""><para name="_AppIndex" id="_AppIndex"><![CDATA[1]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><macrotest name="选择标准源" id="MacroTest4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><para macroid="AppSelect" testmode=""><fparas name="" id=""><para name="_AppIndex" id="_AppIndex"><![CDATA[3]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="接入断路器（示例）" id="Safety3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=对时接入TD1和2;ExpectString=无;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><safety name="保留" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=;ExpectString=无;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety></items><items name="电压检查（第一组）（博电）" id="JX" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="接入交流线（第一组交流）" id="Safety4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=接交流线：电压ABCN接7UD9、12、15、19、Ux接26、23、电流ABCN接1ID1、2、3、4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"><data name="结果描述" id="RsltDsc" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D01D11K891M9H649_a</bkmk></data></rpt-map><reports/><macrotest name="开关测试" id="JX" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="模拟量极性检查" id="模拟量极性检查" is-ref="0"><![CDATA[]]></script-result><para macroid="UITest.4u3i" testmode=""><fparas name="" id=""><para name="_Uz" id="_Uz"><![CDATA[0]]></para><para name="_Ib" id="_Ib"><![CDATA[MRIn]]></para><para name="_Ic" id="_Ic"><![CDATA[MRIn]]></para><para name="_Ia" id="_Ia"><![CDATA[MRIn]]></para><para name="_UaPh" id="_UaPh"><![CDATA[0]]></para><para name="_UbPh" id="_UbPh"><![CDATA[-120]]></para><para name="_UcPh" id="_UcPh"><![CDATA[120]]></para><para name="_IaPh" id="_IaPh"><![CDATA[0]]></para><para name="_IbPh" id="_IbPh"><![CDATA[-120]]></para><para name="_IcPh" id="_IcPh"><![CDATA[120]]></para><para name="_Ua" id="_Ua"><![CDATA[57.74]]></para><para name="_Ub" id="_Ub"><![CDATA[57.74]]></para><para name="_Uc" id="_Uc"><![CDATA[57.74]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><commcmd name="读遥测CPU1(输出ABC,电压ABC/X/0/无电压)" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="模拟量极性检查" id="模拟量极性检查" is-ref="0"><![CDATA[local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它

local vg_MRUErrorAbs = GetTestPara("g_MRUErrorAbs"); --模入电压绝对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它


local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;

nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", 0, vg_U1VErrorAbs, -1);  
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 


if(nRsltJdg==5) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU1$dsRelayAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><commcmd name="读遥测CPU2(输出ABC,电压ABC/X/0/无电压)" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它

local vg_MRUErrorAbs = GetTestPara("g_MRUErrorAbs"); --模入电压绝对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它


local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;

nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 


if(nRsltJdg==5) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU2$dsRelayAin" delaybeforecmd="200" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><rpt-map name="报表定义" id="_rpt_map"/><safety name="提示闭合1ZKK1" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=闭合1ZKK1;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="读遥测CPU1(输出ABC,/X/0/无电压)" id="CommCmd2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="模拟量极性检查" id="模拟量极性检查" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它


local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值
local v_I0 = vMRIn*0.02;

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", v_Uc, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$ang$f", 0, vg_MRUAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$ang$f", -120, vg_MRUAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$ang$f", 120, vg_MRUAngErrorAbs, -1);
strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流C相$cVal$mag$f", v_Ic, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流C相$cVal$ang$f", 120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

local vTempU = v_Ua + v_Ub + v_Uc;
local vTempI = v_Ia + v_Ib + v_Ic;
if (vTempU < 150) then
	nRsltJdg = 0;
end;
if (vTempI < 2.4) then
	nRsltJdg = 0;
end;

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

if(nRsltJdg==20) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU1$dsRelayAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><commcmd name="读遥测CPU2(输出ABC,/X/0/无电压)" id="CommCmd5" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它


local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值
local v_I0 = vMRIn*0.02;

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", v_Uc, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$ang$f", 0, vg_MRUAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$ang$f", -120, vg_MRUAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$ang$f", 120, vg_MRUAngErrorAbs, -1);
strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流C相$cVal$mag$f", v_Ic, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流C相$cVal$ang$f", 120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

local vTempU = v_Ua + v_Ub + v_Uc;
local vTempI = v_Ia + v_Ib + v_Ic;
if (vTempU < 150) then
	nRsltJdg = 0;
end;
if (vTempI < 2.4) then
	nRsltJdg = 0;
end;

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

if(nRsltJdg==20) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><cmd name="" id="" dataset-path="CPU2$dsRelayAin" delaybeforecmd="200" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script></commcmd><safety name="提示闭合1ZKK2" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=闭合1ZKK2;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="读遥测CPU1(输出ABC,/0/无电压)" id="CommCmd3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="模拟量极性检查" id="模拟量极性检查" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", v_Uc, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$ang$f", 0, vg_U1VErrorAbs, -1); 

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

if(nRsltJdg==6) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU1$dsRelayAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><commcmd name="读遥测CPU2(输出ABC,/0/无电压)" id="CommCmd6" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", v_Uc, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$ang$f", 0, vg_U1VErrorAbs, -1); 

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

if(nRsltJdg==6) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><cmd name="" id="" dataset-path="CPU2$dsRelayAin" delaybeforecmd="200" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script></commcmd></macrotest><macrotest name="零序电压测试" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><para macroid="UITest.4u3i" testmode=""><fparas name="" id=""><para name="_Uc" id="_Uc"><![CDATA[0]]></para><para name="_Ia" id="_Ia"><![CDATA[MRIn]]></para><para name="_Ib" id="_Ib"><![CDATA[MRIn]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><commcmd name="读遥测CPU1(输出AB，C无电压)" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它

local v_I0 = vMRIn*1.414;
local v_IcError = vMRIn*0.02;

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;




nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$ang$f", -60, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$ang$f", -120, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$ang$f", 0, vg_MRUAngErrorAbs, -1); 

nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$ang$f", -60, vg_MRIAngErrorAbs, -1);

local vTempU = v_Ua + v_Ub;
local vTempI = v_Ia + v_Ib;
if (vTempU < 100) then
	nRsltJdg = 0;
end;
if (vTempI < 1.6) then
	nRsltJdg = 0;
end;


if(nRsltJdg==15) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><cmd name="" id="" dataset-path="CPU1$dsRelayAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script></commcmd><commcmd name="读遥测CPU2(输出AB，C无电压)" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_CLIErrorAbs = GetTestPara("g_CLIErrorAbs"); --测量电流绝对误差，当电流通道时，CalAinError的第三个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它

local vg_MRUErrorAbs = GetTestPara("g_MRUErrorAbs"); --模入电压绝对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流绝对误差，非测量电流时，CalAinError的第三个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它



local v_UcPh = GetPara("..\\", "_UcPh"); --Uc相位
local v_UbPh = GetPara("..\\", "_UbPh"); --Ub相位
local v_UaPh = GetPara("..\\", "_UaPh"); --Ua相位

local v_I0 = vMRIn*1.414;
local v_IcError = vMRIn*0.02;

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值
local v_U0 = v_Ua*1.414;
local nRsltJdg = 0;




nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$ang$f", -60, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$ang$f", v_UbPh, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$ang$f", v_UaPh, vg_MRUAngErrorAbs, -1); 

nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护冗余电流A相$cVal$mag$f", v_Ia,-1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护冗余电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护冗余零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$ang$f", -60, vg_MRIAngErrorAbs, -1);

local vTempU = v_Ua + v_Ub;
local vTempI = v_Ia + v_Ib;
if (vTempU < 100) then
	nRsltJdg = 0;
end;
if (vTempI < 1.6) then
	nRsltJdg = 0;
end;


if(nRsltJdg==15) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><cmd name="" id="" dataset-path="CPU2$dsRelayAin" delaybeforecmd="200" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script></commcmd></macrotest><macrotest name="测量电流测试" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><para macroid="UITest.4u3i" testmode=""><fparas name="" id=""><para name="_Ia" id="_Ia"><![CDATA[MRIn]]></para><para name="_Ib" id="_Ib"><![CDATA[MRIn]]></para><para name="_Ic" id="_Ic"><![CDATA[MRIn]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><commcmd name="读测量量(测量电流ABC)" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它

local v_I0 = vMRIn*1.414;
local v_IcError = vMRIn*0.02;

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("测量电流A相$cVal$mag$f", v_Ia, -1, vg_CLIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("测量电流B相$cVal$mag$f", v_Ib, -1, vg_CLIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("测量电流C相$cVal$mag$f", v_Ic, -1, vg_CLIErrorRel);  
nRsltJdg = nRsltJdg + CalAinError("测量电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("测量电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("测量电流C相$cVal$ang$f", 120, vg_MRIAngErrorAbs, -1);


if(nRsltJdg==6) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="Device1$dsAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><rpt-map name="报表定义" id="_rpt_map"/><reports/><items name="电压检查（第一组）（昂立）" id="JX4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="接入交流线（第一组交流）" id="Safety4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=接交流线：电压ABCN接7UD9、12、15、19、Ux接26、23、电流ABCN接1ID1、2、3、4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><items name="开关测试" id="Items" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="加量" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="list" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="OutputRet" data-type="long" unit="" value="1" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="OnllyDevice" para-type="none" func-name="UIOutput" result-file=""><![CDATA[f=50;_Ua=50;_Ub=50;_Uc=50;_UaPh=0;_UbPh=240;_UcPh=120;_Ia=1;_Ib=1;_Ic=1;_IaPh=0;_IbPh=240;_IcPh=120;]]></dllcall></safety><commcmd name="读遥测CPU1(输出ABC,电压ABC/X/0/无电压)" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="模拟量极性检查" id="模拟量极性检查" is-ref="0"><![CDATA[local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它

local vg_MRUErrorAbs = GetTestPara("g_MRUErrorAbs"); --模入电压绝对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它


local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;

nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", 0, vg_U1VErrorAbs, -1);  
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 


if(nRsltJdg==5) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU1$dsRelayAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><commcmd name="读遥测CPU2(输出ABC,电压ABC/X/0/无电压)" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它

local vg_MRUErrorAbs = GetTestPara("g_MRUErrorAbs"); --模入电压绝对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它


local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;

nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 


if(nRsltJdg==5) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU2$dsRelayAin" delaybeforecmd="200" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><safety name="提示闭合1ZKK1" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=闭合1ZKK1;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="读遥测CPU1(输出ABC,/X/0/无电压)" id="CommCmd2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="模拟量极性检查" id="模拟量极性检查" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它


local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值
local v_I0 = vMRIn*0.02;

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", v_Uc, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$ang$f", 0, vg_MRUAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$ang$f", -120, vg_MRUAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$ang$f", 120, vg_MRUAngErrorAbs, -1);
strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流C相$cVal$mag$f", v_Ic, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流C相$cVal$ang$f", 120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

local vTempU = v_Ua + v_Ub + v_Uc;
local vTempI = v_Ia + v_Ib + v_Ic;
if (vTempU < 150) then
	nRsltJdg = 0;
end;
if (vTempI < 2.4) then
	nRsltJdg = 0;
end;

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

if(nRsltJdg==20) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU1$dsRelayAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><commcmd name="读遥测CPU2(输出ABC,/X/0/无电压)" id="CommCmd5" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它


local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值
local v_I0 = vMRIn*0.02;

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", v_Uc, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$ang$f", 0, vg_MRUAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$ang$f", -120, vg_MRUAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$ang$f", 120, vg_MRUAngErrorAbs, -1);
strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流C相$cVal$mag$f", v_Ic, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流C相$cVal$ang$f", 120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

local vTempU = v_Ua + v_Ub + v_Uc;
local vTempI = v_Ia + v_Ib + v_Ic;
if (vTempU < 150) then
	nRsltJdg = 0;
end;
if (vTempI < 2.4) then
	nRsltJdg = 0;
end;

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

if(nRsltJdg==20) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU2$dsRelayAin" delaybeforecmd="200" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><safety name="提示闭合1ZKK2" id="Safety2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=闭合1ZKK2;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="读遥测CPU1(输出ABC,/0/无电压)" id="CommCmd3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="模拟量极性检查" id="模拟量极性检查" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", v_Uc, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$ang$f", 0, vg_U1VErrorAbs, -1); 

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

if(nRsltJdg==6) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU1$dsRelayAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><commcmd name="读遥测CPU2(输出ABC,/0/无电压)" id="CommCmd6" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压C相$cVal$mag$f", v_Uc, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", 0, vg_U1VErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护同期电压$cVal$ang$f", 0, vg_U1VErrorAbs, -1); 

strshow = string.format("nRsltJdg=%d", nRsltJdg);
ShowMsg(strshow);

if(nRsltJdg==6) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU2$dsRelayAin" delaybeforecmd="200" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><safety name="停止输出" id="Safety3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="list" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="OutputRet" data-type="long" unit="" value="1" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="OnllyDevice" para-type="none" func-name="UIOutput" result-file=""><![CDATA[f=50;_Ua=50;_Ub=50;_Uc=50;_UaPh=0;_UbPh=240;_UcPh=120;_Ia=1;_Ib=1;_Ic=1;_IaPh=0;_IbPh=240;_IcPh=120;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><items name="零序电压测试" id="Items1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="加量" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="list" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="OutputRet" data-type="long" unit="" value="1" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="OnllyDevice" para-type="none" func-name="UIOutput" result-file=""><![CDATA[f=50;_Ua=50;_Ub=50;_Uc=50;_UaPh=0;_UbPh=240;_UcPh=120;_Ia=1;_Ib=1;_Ic=1;_IaPh=0;_IbPh=240;_IcPh=120;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="读遥测CPU1(输出AB，C无电压)" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它

local v_I0 = vMRIn*1.414;
local v_IcError = vMRIn*0.02;

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;




nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$ang$f", -60, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$ang$f", -120, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$ang$f", 0, vg_MRUAngErrorAbs, -1); 

nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$ang$f", -60, vg_MRIAngErrorAbs, -1);

local vTempU = v_Ua + v_Ub;
local vTempI = v_Ia + v_Ib;
if (vTempU < 100) then
	nRsltJdg = 0;
end;
if (vTempI < 1.6) then
	nRsltJdg = 0;
end;


if(nRsltJdg==15) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU1$dsRelayAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><commcmd name="读遥测CPU2(输出AB，C无电压)" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_CLIErrorAbs = GetTestPara("g_CLIErrorAbs"); --测量电流绝对误差，当电流通道时，CalAinError的第三个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它

local vg_MRUErrorAbs = GetTestPara("g_MRUErrorAbs"); --模入电压绝对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流绝对误差，非测量电流时，CalAinError的第三个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它



local v_UcPh = GetPara("..\\", "_UcPh"); --Uc相位
local v_UbPh = GetPara("..\\", "_UbPh"); --Ub相位
local v_UaPh = GetPara("..\\", "_UaPh"); --Ua相位

local v_I0 = vMRIn*1.414;
local v_IcError = vMRIn*0.02;

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值
local v_U0 = v_Ua*1.414;
local nRsltJdg = 0;




nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$mag$f", v_Ub, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$mag$f", v_Ua, -1, vg_MRUErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电压$cVal$ang$f", -60, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压B相$cVal$ang$f", v_UbPh, vg_MRUAngErrorAbs, -1); 
nRsltJdg = nRsltJdg + CalAinError("保护电压A相$cVal$ang$f", v_UaPh, vg_MRUAngErrorAbs, -1); 

nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护冗余电流A相$cVal$mag$f", v_Ia,-1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护冗余电流B相$cVal$mag$f", v_Ib, -1, vg_MRIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("保护冗余零序电流$cVal$mag$f", v_Ia, -1, vg_MRIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("保护电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("保护零序电流$cVal$ang$f", -60, vg_MRIAngErrorAbs, -1);

local vTempU = v_Ua + v_Ub;
local vTempI = v_Ia + v_Ib;
if (vTempU < 100) then
	nRsltJdg = 0;
end;
if (vTempI < 1.6) then
	nRsltJdg = 0;
end;


if(nRsltJdg==15) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="CPU2$dsRelayAin" delaybeforecmd="200" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><safety name="停止输出" id="Safety3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="list" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="OutputRet" data-type="long" unit="" value="1" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="OnllyDevice" para-type="none" func-name="UIOutput" result-file=""><![CDATA[f=50;_Ua=50;_Ub=50;_Uc=50;_UaPh=0;_UbPh=240;_UcPh=120;_Ia=1;_Ib=1;_Ic=1;_IaPh=0;_IbPh=240;_IcPh=120;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><items name="测量电流测试" id="Items2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="加量" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="list" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="OutputRet" data-type="long" unit="" value="1" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="OnllyDevice" para-type="none" func-name="UIOutput" result-file=""><![CDATA[f=50;_Ua=50;_Ub=50;_Uc=50;_UaPh=0;_UbPh=240;_UcPh=120;_Ia=1;_Ib=1;_Ic=1;_IaPh=0;_IbPh=240;_IcPh=120;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="读测量量(测量电流ABC)" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadAin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差
local vg_CLIErrorRel = GetTestPara("g_CLIErrorRel"); --测量电流相对误差，当是测量电流通道时，CalAinError的第四个参数用它
local vg_CLIAngErrorAbs = GetTestPara("g_CLIAngErrorAbs"); --测量电流角度绝对误差，测量电流判角度时，CalAinError的第三个参数用它
local vg_CLUErrorAbs = GetTestPara("g_CLUErrorAbs"); --测量电压绝对误差，当电压通道基准值不是0时，CalAinError的第三个参数用它
local vg_CLUAngErrorAbs = GetTestPara("g_CLUAngErrorAbs"); --测量电压角度绝对误差，测量电压判角度时，CalAinError的第三个参数用它

local vMRIn = GetTestPara("MRIn"); --模入电流额定CT值，非测量电流通道时，CalAinError的第二个参数填它
local vCLIn = GetTestPara("CLIn"); --测量电流额定CT值，测量电流通道时，CalAinError的第二个参数填它


local vg_MRUErrorRel = GetTestPara("g_MRUErrorRel"); --模入电压相对误差，非测量电压且基准值不为0时，CalAinError的第三个参数用它
local vg_MRUAngErrorAbs = GetTestPara("g_MRUAngErrorAbs"); --模入电压角度绝对误差，非测量电压判角度时，CalAinError的第三个参数用它
local vg_MRIErrorRel = GetTestPara("g_MRIErrorRel"); --模入电流相对误差，非测量电流时，CalAinError的第四个参数用它
local vg_MRIAngErrorAbs = GetTestPara("g_MRIAngErrorAbs"); --模入电流角度绝对误差，非测量电流判角度时，CalAinError的第三个参数用它
local vg_U1VErrorAbs = GetTestPara("g_U1VErrorAbs"); --电压1V绝对误差，当通道为电压而且基准值是0时，CalAinError的第三个参数用它

local v_I0 = vMRIn*1.414;
local v_IcError = vMRIn*0.02;

local v_Uc = GetPara("..\\", "_Uc"); --Uc幅值
local v_Ub = GetPara("..\\", "_Ub"); --Ub幅值
local v_Ua = GetPara("..\\", "_Ua"); --Ua幅值
local v_Ic = GetPara("..\\", "_Ic"); --Ic幅值
local v_Ib = GetPara("..\\", "_Ib"); --Ib幅值
local v_Ia = GetPara("..\\", "_Ia"); --Ia幅值

local nRsltJdg = 0;


nRsltJdg = nRsltJdg + CalAinError("测量电流A相$cVal$mag$f", v_Ia, -1, vg_CLIErrorRel); 
nRsltJdg = nRsltJdg + CalAinError("测量电流B相$cVal$mag$f", v_Ib, -1, vg_CLIErrorRel);
nRsltJdg = nRsltJdg + CalAinError("测量电流C相$cVal$mag$f", v_Ic, -1, vg_CLIErrorRel);  
nRsltJdg = nRsltJdg + CalAinError("测量电流A相$cVal$ang$f", 0, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("测量电流B相$cVal$ang$f", -120, vg_MRIAngErrorAbs, -1);
nRsltJdg = nRsltJdg + CalAinError("测量电流C相$cVal$ang$f", 120, vg_MRIAngErrorAbs, -1);


if(nRsltJdg==6) then 
	SetRsltJdg("", 1); 
else 
	SetRsltJdg("", 0); 
end; ]]></script-result><cmd name="" id="" dataset-path="Device1$dsAin" delaybeforecmd="g_TReadYC" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><safety name="停止输出" id="Safety3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="list" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="OutputRet" data-type="long" unit="" value="1" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="OnllyDevice" para-type="none" func-name="UIOutput" result-file=""><![CDATA[f=50;_Ua=50;_Ub=50;_Uc=50;_UaPh=0;_UbPh=240;_UcPh=120;_Ia=1;_Ib=1;_Ic=1;_IaPh=0;_IbPh=240;_IcPh=120;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items></items></items><items name="直流测试" id="Items9" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><items name="直流测试（DC1）" id="Items" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="接入直流线（DC1）" id="Safety4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=接温度型直流线：3-21WD1、2、3;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><items name="程序版本检查" id="Items4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><items name="装置唯一编码" id="Items2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="安全措施" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local  vDevOnlyCode=GetGlobal_Str("DevOnlyCode");
SetTestParaStr("DevOnlyCode",vDevOnlyCode);
]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""/><standard></standard><dllcall name="" id="" para-type="none" func-name="" result-file=""><![CDATA[]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="读装置唯一编码" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadSdmAttr" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vDevOnlyCode = GetDsDataStr("Device1$dsSdmDvmAttr$DevOnlyCode"); --装置唯一编码

local  vDeviceOnlyCode=GetGlobal_Str("DevOnlyCode");

if(vDeviceOnlyCode == vDevOnlyCode) then
       SetRsltJdg("",1);
else
       SetRsltJdg("",0);
end
]]></script-result><cmd name="" id="" dataset-path="Device1$dsSdmDvmAttr" delaybeforecmd="0" delayaftercmd="0" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><items name="装置编码检查" id="ZZBM" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><commcmd name="召装置编码" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadDevCode" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsSdmDvmInfo" delaybeforecmd="100" delayaftercmd="100" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"><data name="sdccrc$SDCCRC" id="sdccrc$SDCCRC1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D10D129G384E1G5B09_12</bkmk></data><data name="CPU1$CPU1.APPLIB" id="CPU1$CPU1.APPLIB1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D101F29F38G496K7F4_13</bkmk></data><data name="CPU1$CPU1.logic" id="CPU1$CPU1.logic2" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C11C012M9E3J8G532K7F4_14</bkmk></data><data name="CPU1$CPU1.KERNEL" id="CPU1$CPU1.KERNEL3" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C11C0C129G38H569L87_15</bkmk></data><data name="CPU1$CPU1.ESDC" id="CPU1$CPU1.ESDC4" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D1B0C129G39C090I5_16</bkmk></data><data name="CPU1$CPU1.HAL" id="CPU1$CPU1.HAL5" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D0C1D293M9F464H4_17</bkmk></data><data name="CPU1$CPU1.FPGA" id="CPU1$CPU1.FPGA6" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C1C1B0C129G398I5J88_18</bkmk></data><data name="CPU1$CPU1.MAX10" id="CPU1$CPU1.MAX107" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D012M93L9C1D275K7_19</bkmk></data><data name="CPU2$CPU2.APPLIB" id="CPU2$CPU2.APPLIB1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C1C10D1D293M9D231E16_1a</bkmk></data><data name="CPU2$CPU2.logic" id="CPU2$CPU2.logic2" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C11C012M93L927F22G4_1b</bkmk></data><data name="CPU2$CPU2.KERNEL" id="CPU2$CPU2.KERNEL3" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D10D12L9E393D09J7G5_1c</bkmk></data><data name="CPU2$CPU2.ESDC" id="CPU2$CPU2.ESDC4" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D0C1D293M935G38G4_1d</bkmk></data><data name="CPU2$CPU2.HAL" id="CPU2$CPU2.HAL5" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D0C129G39F394D02_1e</bkmk></data><data name="CPU2$CPU2.FPGA" id="CPU2$CPU2.FPGA6" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C110E1D293M9F437E17_1f</bkmk></data><data name="CPU2$CPU2.MAX10" id="CPU2$CPU2.MAX107" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D0C129G394K7K90J7_20</bkmk></data><data name="MASTER$MASTER" id="MASTER$MASTER1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D012M94C018E123_21</bkmk></data><data name="MASTER$ramdisk" id="MASTER$ramdisk2" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D1B0C1D2K9F40E22F3K99_22</bkmk></data><data name="MASTER$uimage" id="MASTER$uimage3" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D1B012M9F402J62E21_23</bkmk></data><data name="MASTER$uboot" id="MASTER$uboot4" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D01E2K94C029J6F4J8_24</bkmk></data><data name="MASTER$dtb" id="MASTER$dtb5" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D10D129H403G337D0_25</bkmk></data><data name="DI1$DI" id="DI1$DI1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D012M94C048G35_26</bkmk></data><data name="DI1$BOOT1" id="DI1$BOOT12" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C110E12L9F405G37H58_27</bkmk></data><data name="DI1$BOOT2" id="DI1$BOOT23" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C11C0C1D29G4B05J767I5_28</bkmk></data><data name="DO1$DO" id="DO1$DO1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C1C1B0C129H411I564_29</bkmk></data><data name="DO1$BOOT1" id="DO1$BOOT12" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D012M94D15K8K9_2a</bkmk></data><data name="DO1$BOOT2" id="DO1$BOOT23" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D10D129H418K73K8_2b</bkmk></data><data name="DO2$DO" id="DO2$DO1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D012M9F41D12K8J81_2c</bkmk></data><data name="DO2$BOOT1" id="DO2$BOOT12" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C110E1D2K941E19H57_2d</bkmk></data><data name="DO2$BOOT2" id="DO2$BOOT23" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D012M94D1D2D2F485_2e</bkmk></data><data name="DO3$DO" id="DO3$DO1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C110E1D29G412L870H4_2f</bkmk></data><data name="DO3$BOOT1" id="DO3$BOOT12" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D101F294E132G393_30</bkmk></data><data name="DO3$BOOT2" id="DO3$BOOT23" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D0C12L941G3H6H6K9_31</bkmk></data><data name="DO4$DO" id="DO4$DO1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D10D12L941H40J70_32</bkmk></data><data name="DO4$BOOT1" id="DO4$BOOT12" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D1B0C12L941H433D0C1_33</bkmk></data><data name="DO4$BOOT2" id="DO4$BOOT23" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D012M9F41G4H672D0_34</bkmk></data><data name="MMI$LCD" id="MMI$LCD1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D01E29G415D08F3K9_35</bkmk></data><data name="MMI$BOOT1" id="MMI$BOOT12" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C110E1D29G41H56L95J7_36</bkmk></data><data name="MMI$BOOT2" id="MMI$BOOT23" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D1B01E29G420J6C15_37</bkmk></data><data name="undefined$KPHX.KERNEL" id="undefined$KPHX.KERNEL1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D01E294F29G498_38</bkmk></data><data name="undefined$KPHX.HAL" id="undefined$KPHX.HAL2" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk2C1C10D129H42D131D05_39</bkmk></data><data name="undefined$KPHX.FPGA" id="undefined$KPHX.FPGA3" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D01E2K94E2C167M94_3a</bkmk></data><data name="DO5$DO" id="DO5$DO1" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk211D013E11C04K864_28</bkmk></data><data name="DO5$BOOT1" id="DO5$BOOT12" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D1B0C13D110L829J6_29</bkmk></data><data name="DO5$BOOT2" id="DO5$BOOT23" precision=""><bkmk attr-id="value" process="" fill-mode="">Bmk21D1B01F311D01D199H4_2a</bkmk></data></rpt-map></commcmd><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><items name="开出传动测试" id="Items5" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><items name="测试前准备" id="Items" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><macrotest name="选择IO辅助装置" id="MacroTest2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><para macroid="AppSelect" testmode=""><fparas name="" id=""><para name="_AppIndex" id="_AppIndex"><![CDATA[2]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><reports/><commcmd name="装置复归" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="Reset" rw-optr="none" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="none" delaybeforecmd="g_TComBef" delayaftercmd="500" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><commcmd name="测试前读开出" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadDout" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="200" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd></items><items name="开出非保持型传动测试" id="Items1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1XD1和4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="将装置信号变为1" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:装置故障" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><macrotest name="结果导通" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><commcmd name="将装置信号变为0" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:装置故障" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><macrotest name="结果断开" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"><data name="结果判断" id="RsltJdg" precision=""><bkmk attr-id="value" process="V_lt_TrueOrFalse" fill-mode="">Bmk21D1B0C111L81D135L81J7_d</bkmk></data></rpt-map><reports/><items name="开出保持型传动测试" id="Items4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1XD1和4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="将装置信号变为1" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:装置故障" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><macrotest name="结果导通" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><commcmd name="将装置信号变为0" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:装置故障" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><commcmd name="装置复归" id="CommCmd3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="Reset" rw-optr="none" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="none" delaybeforecmd="2000" delayaftercmd="2000" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><macrotest name="结果断开" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><items name="闭锁调压传动测试" id="Items10" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1XD1和4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="将装置信号变为1" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:装置故障" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><macrotest name="结果断开" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><commcmd name="将装置信号变为0" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:装置故障" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><macrotest name="结果导通" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><items name="开出1经过压板不闭合测试" id="Items6" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=打开1LP4量1CD4和9;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="将装置信号变为1" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:保护跳闸" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><macrotest name="结果断开" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><commcmd name="将装置信号变为0" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:保护跳闸" value="0"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd></items><items name="开出1经过压板闭合测试" id="Items17" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=闭合1LP4，量1CD4和9;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="将装置信号变为1" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:保护跳闸" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><macrotest name="结果导通" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><commcmd name="将装置信号变为0" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:保护跳闸" value="0"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd></items><items name="开出1接操作箱不闭合测试" id="Items3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=打开1LP4量1CD4和9;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="将装置信号变为1" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:保护跳闸" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><safety name="提示接入表笔1" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=打开1LP4量1CD4和9;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="将装置信号变为0" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:保护跳闸" value="0"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd></items><items name="开出1接操作箱闭合测试" id="Items2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=闭合1LP4，量1CD4和9;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="将装置信号变为1" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:保护跳闸" value="1"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><safety name="提示接入表笔1" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=闭合1LP4，量1CD4和9;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><commcmd name="将装置信号变为0" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="WriteDout" rw-optr="write" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsDout" delaybeforecmd="0" delayaftercmd="ATJudgeDout" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"><value id="ProtDO:保护跳闸" value="0"/></cmd><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd></items><items name="通道告警" id="Items7" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1LD1和1LD7;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置0" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示接入表笔1" id="Safety2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=断开通道一光纤;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><items name="通道故障" id="Items16" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1LD1和1LD7;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果1置0" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示：断开通道一光纤" id="Safety2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=断开通道一光纤;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果2置0" id="MacroTest2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示：断开通道二光纤" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=断开通道二光纤;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果3置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示：闭合通道一光纤" id="Safety3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=闭合通道一光纤;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果4置0" id="MacroTest3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><items name="双层压板测试" id="Items5" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1LD1和1LD7;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置0" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示接入表笔1" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1LD1和1LD7;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><items name="空开辅助接点测试" id="Items9" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1LD1和1LD7;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置0" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示接入表笔1" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1LD1和1LD7;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><items name="调试人员自测" id="Items8" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="提示接入表笔" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[SetTestPara("LoopNum",1);
local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=合纵联差动压板;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><commcmd name="装置复归（总）" id="CommCmd3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="Reset" rw-optr="none" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="none" delaybeforecmd="2000" delayaftercmd="2000" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd></items><items name="连接线检测" id="Items7" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><items name="导通测试" id="Items" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="连接线测试（示例）" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=1YD1、4YD1、7YD1是否导通;ExpectString=是否合格;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items></items><items name="开入检测" id="DITest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><items name="测试前准备" id="Items1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><safety name="提示检测开入压板状态" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[SetTestPara("LoopNum",1);
local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=确认检修以外的压板已打开;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><rpt-map name="报表定义" id="_rpt_map"/><reports/><commcmd name="测试前读开入状态" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadDin" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="Device1$dsRelayDin" delaybeforecmd="3000" delayaftercmd="2000" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type="sequence"><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd></items><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><items name="开入x测试（示例）" id="Items25" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="提示接入开入信号" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[SetTestPara("LoopNum",1);
local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=合纵联差动压板;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><commcmd name="判断开入状态（示例）" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadSoe" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="report" delaybeforecmd="3000" delayaftercmd="ATJudgeDin" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""><data name="全部报文" id="_SOE_RPT_" data-type="cell-mode" unit="" value="0" format="" remark="" default="" reserved="0" time="0"/></datas><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="Device1$dsRelayDin" type="sequence"><eliminate name="" id="" data-type="" write-mode="0" index="0"/><element name="第一组跳闸" id="第一组跳闸" minocc="1" maxocc="1" mode=""><attr name="value" id="value" optr="==" value="1" value2="" data-type="int" variable=""/><attr name="ID" id="id" optr="==" value="第一组跳闸" value2="" data-type="string" variable=""/></element></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="开入测试结果判断" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local LoopNum = GetTestPara("LoopNum"); --循环次数

local CommCmdResult = GetRsltJdg("..\\CommCmd1");--获取通讯命令的结果

 if (CommCmdResult==1)  then
	SetTestPara("LoopNum",1);
	SetRsltJdg("", 1);
else
	if (CommCmdResult==0) and (LoopNum<=5) then --如果结果不正确并且循环次数小于5，执行跳转
		GotoItem("..\\CommCmd1");
		LoopNum =LoopNum+1;

		SetTestPara("LoopNum",LoopNum);
	end;
	SetRsltJdg("", 0);
end;]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""/><standard></standard><dllcall name="" id="" para-type="none" func-name="" result-file=""><![CDATA[]]></dllcall></safety></items><rpt-map name="报表定义" id="_rpt_map"/><reports/><items name="母电压开入x测试（示例）" id="Items2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="提示接入开入信号" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[SetTestPara("LoopNum",1);
local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=合纵联差动压板;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><commcmd name="判断开入状态置1" id="CommCmd1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadSoe" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><cmd name="" id="" dataset-path="report" delaybeforecmd="3000" delayaftercmd="ATJudgeDin" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""><data name="全部报文" id="_SOE_RPT_" data-type="cell-mode" unit="" value="0" format="" remark="" default="" reserved="0" time="0"/></datas><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="Device1$dsRelayDin" type="sequence"><eliminate name="" id="" data-type="" write-mode="0" index="0"/><element name="第一组跳闸" id="第一组跳闸" minocc="1" maxocc="1" mode=""><attr name="value" id="value" optr="==" value="1" value2="" data-type="int" variable=""/><attr name="ID" id="id" optr="==" value="第一组跳闸" value2="" data-type="string" variable=""/></element></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="开入测试置1结果判断" id="Safety2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local LoopNum = GetTestPara("LoopNum"); --循环次数

local CommCmdResult = GetRsltJdg("..\\CommCmd1");--获取通讯命令的结果

 if (CommCmdResult==1)  then
	SetTestPara("LoopNum",1);
	SetRsltJdg("", 1);
else
	if (CommCmdResult==0) and (LoopNum<=5) then --如果结果不正确并且循环次数小于5，执行跳转
		GotoItem("..\\CommCmd1");
		LoopNum =LoopNum+1;

		SetTestPara("LoopNum",LoopNum);
	end;
	SetRsltJdg("", 0);
end;]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""/><standard></standard><dllcall name="" id="" para-type="none" func-name="" result-file=""><![CDATA[]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><safety name="提示接入开入信号1" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[SetTestPara("LoopNum",1);
local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=合纵联差动压板;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety></items><items name="调试人员自测" id="Items" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="提示接入开入信号" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[SetTestPara("LoopNum",1);
local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=合纵联差动压板;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items></items><items name="操作回路测试" id="Items2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><items name="断路器合位（YD）" id="Items" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><safety name="提示接入表笔" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量4YD9、11;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置0" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔1" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量4YD9、11;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><items name="位置不对应" id="Items1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><safety name="提示接入表笔" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量4YD1、4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><rpt-map name="报表定义" id="_rpt_map"/><reports/><macrotest name="I/O辅助判断结果1置0" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示接入表笔1" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=断开4K;ExpectString=是否合格;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果2置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示接入表笔2" id="Safety2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=断开4K;ExpectString=是否合格;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果3置0" id="MacroTest2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><items name="手跳（点）" id="Items5" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><safety name="提示接入表笔" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量4PD1、6;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔1" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=4QD1点19;ExpectString=是否合格;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety></items></items><items name="电压切换回路测试" id="Items12" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><items name="UAI（合格）" id="Items16" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量7UD1、9;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><items name="切换器同时动作（合格）" id="Items11" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量7YD1、4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果1置0" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示接入表笔1" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量7YD1、4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果2置0" id="MacroTest2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示接入表笔2" id="Safety2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量7YD1、4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果3置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><items name="切换器直流消失（合格）" id="Items12" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="提示接入表笔" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量7YD1、4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果1置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示接入表笔1" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量7YD1、4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果2置0" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest><safety name="提示接入表笔2" id="Safety2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量7YD1、4;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果3置0" id="MacroTest2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items></items><items name="对时测试" id="Items1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><commcmd name="对时测试" id="CommCmd" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="ReadSdmAttr" rw-optr="read" sort-soe="0" dsv-run-after-rst="0" mgbrpt-cmd-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vTimingAnomaly = GetDsDataValue("SdmDeviceAttr$dsSdmDvmAttr$TimingAnomaly");
if(vTimingAnomaly==1)then
       SetRsltJdg("",0);
else
       SetRsltJdg("",1);
end]]></script-result><cmd name="" id="" dataset-path="Device1$dsSdmDvmAttr" delaybeforecmd="500" delayaftercmd="200" delaybefortry="0" maxretrytimes="0" retrytimes="0" rpt-fill-no-repeat="0" cal-mode="none" timelong="" timegap="" usecurrsetdata="1" usedeviceex="255" begin-mode="synchro" use-connect="0"/><datas name="" id=""/><dsv-script name="" id="" minocc="1" maxocc="1" in-dataset="" type=""><eliminate name="数据集" id="dataset" data-type="" write-mode="0" index="0"/></dsv-script><rpt-map name="报表定义" id="_rpt_map"/></commcmd><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/></items><items name="以太网测试" id="Items8" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><safety name="以太网1测试" id="Safety" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="list" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=请接入以太网1的网线;ExpectString=是否完成;]]></dllcall></safety><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="ping以太网1" id="Safety1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="list" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vPingRet = GetReportValue("", "PingRet"); --输出结果
if ((vPingRet>0.999)and(vPingRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="PingRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="PingModule" para-type="none" func-name="PintIt" result-file=""><![CDATA[IPAddress=192.168.1.1;]]></dllcall></safety></items><items name="电源插件检查" id="Items3" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><items name="失电告警检查" id="Items1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><items name="测试前准备" id="Items" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="断电前检查失电告警接点断开" id="Safety4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=量1XD1、4、1YD1、4不导通;ExpectString=是否合格;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置0" id="MacroTest" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,0)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><items name="断电状态检查" id="Items2" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="断电后检查失电告警接点闭合" id="Safety4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=断开1K，量1XD1、4、1YD1、4导通;ExpectString=是否合格;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety><macrotest name="I/O辅助判断结果置1" id="MacroTest1" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="macrotest" repeat-timers="1" cal-mode="none" rpt-fill-no-repeat="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[vRslt=BinStateRslt("BinputsResult", "CheckGroup");

if  (vRslt==1)  then
   vRsltJdg= 1;
else 
   vRsltJdg= 0;
 end;

SetRsltJdg("", vRsltJdg);]]></script-result><para macroid="SFIOTest" testmode=""><fparas name="" id=""><para name="BinputsResult" id="BinputsResult"><![CDATA["(1.1.2,1)"]]></para><para name="GetResultDelay" id="GetResultDelay"><![CDATA[0.5]]></para></fparas><fparas-usr name="" id=""/><script name="" id="" is-ref="0"><![CDATA[]]></script></para><rpt-map name="报表定义" id="_rpt_map"/></macrotest></items><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"><data name="结果判断" id="RsltJdg" precision=""><bkmk attr-id="value" process="V_lt_TrueOrFalse" fill-mode="">Bmk2B0F43C016E130L837_b</bkmk><bkmk attr-id="value" process="V_lt_TrueOrFalse" fill-mode="">Bmk211D011E1I746I5K9C10L9_5</bkmk></data></rpt-map><reports/></items><reports/></items><items name="测试后恢复" id="Items15" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="none" characteristic-id="" stxml="" wzd-map=""><expr-script name="" id="" is-ref="0" macroid="" dataset="" timegap="" retrytimes="5" time-ignore=""/><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[]]></script-result><rpt-map name="报表定义" id="_rpt_map"/><reports/><safety name="测试结束提示" id="Safety4" tkid="65535" show="1" enable="1" exectype="0" batch-item="0" mdv-test-each="0" type="script" sound-file="" many-rpt-test-mode="0"><script-init name="" id="" is-ref="0"><![CDATA[]]></script-init><script-name name="" id="" is-ref="0"><![CDATA[]]></script-name><script-result name="" id="" is-ref="0"><![CDATA[local vSpeakRet = GetReportValue("", "SpeakRet"); --输出结果
if ((vSpeakRet>0.999)and(vSpeakRet<1.0001)) then
	SetRsltJdg("", 1);
else
	SetRsltJdg("", 0);
end]]></script-result><script name="" id="" is-ref="0"><![CDATA[]]></script><datas name="" id=""><data name="输出结果" id="SpeakRet" data-type="long" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/><data name="结果提示" id="RetString" data-type="string" unit="" value="" format="dll" remark="" default="" reserved="0" time="0"/></datas><standard></standard><dllcall name="" id="SpeechModule" para-type="none" func-name="SpeakIt" result-file=""><![CDATA[SpeakString=测试结束，移除所有接线;ExpectString=是否完成;]]></dllcall><rpt-map name="报表定义" id="_rpt_map"/></safety></items></device></guidebook>
